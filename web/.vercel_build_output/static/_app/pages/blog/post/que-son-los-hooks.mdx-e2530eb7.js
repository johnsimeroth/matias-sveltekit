import{S as e,i as a,s as o,B as n,j as s,m as t,o as r,p as c,q as i,x as l,u as d,v as p,N as u,k as m,e as f,t as v,n as h,c as k,a as b,g as q,d as E,b as g,f as y,G as z,K as j}from"../../../chunks/vendor-64eebebd.js";import{P}from"../../../chunks/PostLayout-1d1b8b8e.js";import{B as R}from"../../../chunks/Buzzsprout-a39d13f8.js";import{Q as x}from"../../../chunks/Quote-982ae035.js";function H(e){let a,o,n,c,i;return c=new R({props:{buzzsproutId:"4728410-react-hooks"}}),{c(){a=f("h3"),o=v("Este post es parte transcripción  de lo emitido en el episodio 16 de Café con Tech y también material extra"),n=m(),s(c.$$.fragment),this.h()},l(e){a=k(e,"H3",{id:!0});var s=b(a);o=q(s,"Este post es parte transcripción  de lo emitido en el episodio 16 de Café con Tech y también material extra"),s.forEach(E),n=h(e),t(c.$$.fragment,e),this.h()},h(){g(a,"id","este-post-es-parte-transcripción--de-lo-emitido-en-el-episodio-16-de-café-con-tech-y-también-material-extra")},m(e,s){y(e,a,s),z(a,o),y(e,n,s),r(c,e,s),i=!0},p:j,i(e){i||(l(c.$$.fragment,e),i=!0)},o(e){d(c.$$.fragment,e),i=!1},d(e){e&&E(a),e&&E(n),p(c,e)}}}function $(e){let a,o,n,c,i,u,j,P,R,$,C,I,L,S,A,O,w,D,T,N,U,G,B,M,Q,_,J,V,F,K,Z,W,X,Y,ee,ae,oe,ne,se,te,re,ce,ie,le,de,pe,ue,me,fe,ve,he,ke,be,qe,Ee,ge,ye,ze,je,Pe,Re,xe,He,$e,Ce,Ie,Le,Se,Ae,Oe,we,De,Te,Ne,Ue,Ge,Be,Me,Qe,_e,Je,Ve,Fe,Ke,Ze,We,Xe,Ye,ea,aa,oa,na,sa,ta,ra,ca,ia,la,da,pa,ua,ma,fa,va,ha,ka,ba,qa,Ea,ga,ya,za,ja,Pa,Ra,xa,Ha,$a,Ca,Ia,La,Sa,Aa,Oa,wa,Da,Ta,Na,Ua,Ga,Ba,Ma,Qa,_a,Ja,Va,Fa,Ka,Za,Wa,Xa,Ya,eo,ao,oo,no,so,to,ro,co,io,lo,po,uo,mo,fo,vo,ho,ko,bo,qo,Eo,go,yo,zo,jo,Po,Ro,xo,Ho,$o,Co,Io,Lo,So,Ao,Oo,wo,Do,To,No,Uo,Go,Bo,Mo,Qo,_o,Jo,Vo,Fo,Ko,Zo,Wo,Xo,Yo,en,an,on,nn,sn,tn,rn,cn,ln,dn,pn,un,mn,fn,vn,hn,kn,bn,qn,En,gn;return a=new x({props:{$$slots:{default:[H]},$$scope:{ctx:e}}}),{c(){s(a.$$.fragment),o=m(),n=f("h4"),c=v("¿Qué son los Hooks en React y por que?"),i=m(),u=f("p"),j=v("Cuando esta nueva API fue anunciada en la React Conf en OCtubre de 2018 causo algo de controversia, muchos aplaudieron emocionados por las nuevas posibilidades y muchos otros quedaron con la duda del por que esto sería necesario cuando ya teníamos una API standard en forma de clases y varios patrones de diseño altamente probados."),P=m(),R=f("p"),$=v("Bueno, el equipo tras React y la comunidad en general ya habían  identificado varios problemas durante la primera era de la librería , problemas que llevaron a la creación de la api de Hooks."),C=m(),I=f("p"),L=v("Desde la publicación de React hemos podido entender que el uso de componentes y un ciclo de datos de una dirección ayudan a organizar el desarrollo de nuestra UI en partes pequeñas, inpendientes y reutilizables. Pero a pesar de esto, muchas veces nos hemos encontrado con la imposibilidad de continuar dividiendo un componente complejo dado que la implementación es dependendiente del estado impidiendo  su extracción. Muchas veces esto es lo que muchos detractores de React se refieren a la imposibilidad inherente de la librería para separar las responsabilidades."),S=m(),A=f("p"),O=v("Este tipo de casos son muy comunes en el desarrollo de aplicaciones complejas, casos como animaciones, manejo de múltiples formularios, conexión con datos externos, etc"),w=m(),D=f("p"),T=v("Normalmente las soluciones implementadas en estos casos caen en unos de estos tres tipos."),N=m(),U=f("ul"),G=f("li"),B=f("strong"),M=v("Componentes gigantes"),Q=v(", que claramente son dificiles de mantener, refactorizar y testear"),_=m(),J=f("li"),V=f("strong"),F=v("Lógica duplicada"),K=v(" entre diferentes componentes lo que dificulta la mantenibilidad del código o fomenta la creación de abstracciones aún más complejas"),Z=m(),W=f("li"),X=f("strong"),Y=v("Patrones de diseño compuestos"),ee=v("  como mezclas entres render props y high-order components"),ae=m(),oe=f("p"),ne=v("Entonces basado en todos estos problemas nacio Hooks, como un intento (bastante certero a decir verdad) de reparar todos esos problemas de un sólo golpe."),se=m(),te=f("p"),re=v("La idea trás hooks mantiene la filosofía implementada por react, composición y un flujo de datos explicito, pero ya no sólo entre componentes, si no, dentro de un componente."),ce=m(),ie=f("p"),le=v("una crítica de los primeros días de hooks es que se acrecenta la curva de aprendizaje de React ya que existen multiples conceptos y formas de resolver un mismo problema, pero: Si se adopta (como se ha hecho hasta ahora) el uso de hooks como la formar primaria de escribir una aplicación React, en realidad se reduciría el número de conceptos con los que hay que lidiar. Aquí los principiantes lo tienen algo más fácil. No tiene un modelo mental que modificar y sólo deben ir directamente a utilizar y entender Hooks.\nPara los más viejitos, quizá sea una curva de aprendizaje un poco más empinada ya que el modelo mental internalizado genera ciertos choques que impiden entender del todo el funcionamiento de hooks. useEffect te estoy mirando a ti."),de=m(),pe=f("h4"),ue=v("¿Entonces que son los hooks?"),me=m(),fe=f("p"),ve=v("El principio básico del que nace esta implementación es en la reutilización de código.\nHasta antes de la llegada de esta API existían muchas formas de compartir o reutilizar código. funciones utilitarias para ciertos cálculos o componentes, que por cierto también son una función.\nEl inconveniente de los componentes a la hora de reutilizar código es que estos deben de renderizar algo, por lo que si es necesario compartir logica que no corresponda con nuestra UI se tornan algo incovenientes dando nacimiento así a patrones más complejos como los high-order components y render props, que como comenté en el episodio anterior buscan una forma de compartir lógica entre diversos componentes, patrones también conocidos como headless components."),he=m(),ke=f("p"),be=v("Pero, las funciones parecen ser el mecanismo adecuado para la reutilización de código no? Además Javascript hace que la tarea de mover lógica entre funciones sea directa dado su soporte de primer orden y tomando todo lo aprendido desde la programación funcional donde una función es la unidad atómica de tu programa.\nEl problema con las funciones es que, no es posible tener estado en su interior, estado desde el punto de vista de React. ANtes de hooks no era posible extraer lógica relacionada con el estado de la UI tal como “animar un valor ” sin necesitar una refactorización masiva o la introducciones de patrones más complejos o mecanismos con una nueva curva de aprendizaje., como reactive programming."),qe=m(),Ee=f("p"),ge=v("Hooks propone exactamente una solución a esto. La api de hooks permite utilizar carecterísitcas inherentes de React, como el estado, directamente en una función, y como estos hooks son simples funciones en Javascript, es posible combinarlas y componerlas como más consideremos adecuado dando nacimiento así a los hooks personalizados o “custom hooks”. Permitiendo a cada desarrollador refactorizar problemas complejos o lógica duplicada en simples funciones que se pueden compartir en toda la aplicación."),ye=m(),ze=f("p"),je=v("React ofrece con esta nueva API algunos bloques de construcción básicos tales como:"),Pe=m(),Re=f("ul"),xe=f("li"),He=f("strong"),$e=v("useState"),Ce=v(": un hooks que permite mantener estado dentro de tu componente funcional"),Ie=m(),Le=f("li"),Se=f("strong"),Ae=v("useReducer"),Oe=v(": una variante de useState que permite manejar estados más complejos utilizando una función reducer."),we=m(),De=f("li"),Te=f("strong"),Ne=v("useEffect"),Ue=v(": Quizá el hook más complejo de entender  dado la insistencia de muchos en relacionarlo con los métodos del ciclo de vida de un componente tipo clase. Este es el hook que permite la realización de la obtención de datos, suscripciones o manipulación manual del DOM, esta diseñado para efectuar efectos secundarios o side effects."),Ge=m(),Be=f("li"),Me=f("strong"),Qe=v("useContext"),_e=v(": El hook que democratizó la API context."),Je=m(),Ve=f("p"),Fe=v("Los hooks son funciones totalmente encapsuladas, creando un estado local aislado dentro del componente en que se ejecuta, es decir, no son una forma de compartir estado, si no, una forma de compartir logica con estado."),Ke=m(),Ze=f("h4"),We=v("Entonces que pasó con las clases? las olvidamos.?"),Xe=m(),Ye=f("p"),ea=v("Los hooks personalizados son quizá la parte más interesante de esta api y para ello React provee de hooks básicos o pilares, para construir abstracciones poderosas, al ofrecer estos hooks básicos se cubre también otra necesidad: son suficientes para definir un componente en general, es por esto que la comunidad empuja a que Hooks sea la forma principal para construir componentes React."),aa=m(),oa=f("p"),na=v("El equipo tras React no tiene planes de jubilar las clases, pero dado que hooks ha sido aceptado enormemente, no hay razón para que existan dos formas recomendadas de escribir componentes.\nLos hooks pueden cubrir todos los casos de uso de los componentes de clase y proveer más flexibilidad, por lo que se recomienda que este sea el camino de aquí en adelante."),sa=m(),ta=f("p"),ra=v("Algo que también es importante es entender que el funcionamiento de los hooks en las entrañas de React no es ninguna magia vudú, si no. Todo lo contrario. Es una implementación bastante simple."),ca=m(),ia=f("p"),la=v("React mantiene una lista de los hooks usados en cada componente, y mueve el puntero al siguiente en la lista cada vez que un hook es utilizado. Gracias a la existencia de las “reglas de los hooks”, el orden es el mismo en cada renderizado, permitiendo así que se pueda proveer el componente con el estado correcto en cada llamada."),da=m(),pa=f("p"),ua=v("El estado de los hooks tampoco es nada nuevo ni especial, este es mantenido por React de la misma forma que se hacía para el estado en los componentes de clase. React posee una cola de actualización interna que se utiliza como terreno de la verdad (source of truth) para cualquier estado, sin importar como este fue definido en el componente."),ma=m(),fa=f("p"),va=v("Hooks no utiliza Proxies o getters que han sido muy popularizados en algunas modernas librerías. Básicamente la ejecución de los hooks es muy similar a Array.push y Array.pop"),ha=m(),ka=f("p"),ba=v("Entonces, si estas comenzando con React. Enfoca tu búsqueda de información en ejemplos y contenido que muestre el desarrollo con hooks como pilar principal, si ya estas avanzado en el uso de la librería, ciertamente no es necesario que refactorices todo tu código para usar hooks, React tiene retro-compatibilidad y las clases no han sido marcadas como deprecated por lo que simplemente deberías enfocarte en el cambio de tu modelo mental y comenzar a crear nuevos features con la nueva api"),qa=m(),Ea=f("h4"),ga=v("¿Por qué hablo de un cambio de modelo mental?"),ya=m(),za=f("p"),ja=v("Antes de la llegada oficial de Hooks la forma de construir aplicaciones con React estaba basada principalmente en el uso de clases y sus métodos de ciclos de vida. Los componentes funcionales o “stateless” eran incluso llamados “tontos” (dumb components) pues solo eran utilizados para renderizar partes de la UI sin realmente efectuar alguna acción dinámica, mas allá de representar el contenido de sus props."),Pa=m(),Ra=f("p"),xa=v("Hooks, presenta una forma distinta de manejar un componente, los métodos de ciclos de vida ya no existen o se han vuelto redundantes transformando la forma en que desarrollamos a un método más cercano a la programación funcional."),Ha=f("br"),$a=m(),Ca=f("code"),Ia=v("React.useEffect"),La=v(" es el hook que se encarga de efectuar todas las mismas acciones que se podían hacer con los métodos de ciclo de vida, pero en realidad no es un reemplazo uno a uno de aquellos métodos, si no, una forma diferente de efectuar acciones sobre el component."),Sa=m(),Aa=f("p"),Oa=v("He aquí el cambio de modelo mental, ahora ya no estamos escribiendo clases, estamos escribiendo funciones que tiene un método de efectuar side effects."),wa=m(),Da=f("p"),Ta=v("Los “effects” están relacionados con el modelo mental que tenemos sobre el renderizado de un componente y cómo este se relaciona con su estado."),Na=m(),Ua=f("p"),Ga=v("Como ejemplo"),Ba=m(),Ma=f("pre"),Qa=m(),_a=f("p"),Ja=v("En este pequeño trozo de código ¿qué quiere decir el renderizado condicional? ¿el valor de "),Va=f("code"),Fa=v("isHide"),Ka=v(" vigila los cambios que ocurren en el state? En general, al usar "),Za=f("code"),Wa=v("useState"),Xa=v(" lo que se obtiene como primer valor es sólo eso, un valor, no hay data binding ni watchers, ni observables ni nada más. Sólo un valor, que en este caso es un boolean."),Ya=m(),eo=f("p"),ao=v("Por cada click que se haga en el botón, se realiza una llamada a  "),oo=f("code"),no=v("setIsHide"),so=v(", es decir, un cambio en el estado y esto inicia un nuevo renderizado del componente. En cada una de estas nuevas llamadas al componente, "),to=f("code"),ro=v("useState"),co=v(" retornará un nuevo valor a la variable "),io=f("code"),lo=v("isHide"),po=v("."),uo=m(),mo=f("p"),fo=v("Por cada cambio en el estado, React ejecuta una nueva llamada a la función con la que declaramos el componente, así, en cada ocasión un nuevo resultado es retornado por la llamada y en cada llamada un nuevo valor para "),vo=f("code"),ho=v("isHide"),ko=v(" es visto por la función."),bo=m(),qo=f("p"),Eo=v("Es así que esta linea "),go=f("code"),yo=v("{isHide? null : text}"),zo=v(" simplemente compara un valor constante y local "),jo=f("code"),Po=v("isHide"),Ro=v(" para definir si se renderiza o no el texto."),xo=m(),Ho=f("p"),$o=v("Es decir, los valores retornados por "),Co=f("code"),Io=v("useState"),Lo=v(" son constantes dentro de un renderizado en particular, la variable no cambia en el tiempo, no es un stream continuo de datos, al contrario, es el componente que es llamado en varias ocasiones con un valor de estado distinto. Esto también es verdad para los manejadores de eventos (eventHandlers) que hagan uso del valor de estado. El manejador de eventos "),So=f("em"),Ao=v("pertenece"),Oo=v(" a un renderizado en particular."),wo=m(),Do=f("p"),To=v("Por extensión llegamos a los side effects."),No=m(),Uo=f("p"),Go=v("Para esto podemos usar un sencillo ejemplo"),Bo=m(),Mo=f("pre"),Qo=m(),_o=f("p"),Jo=v("Este ejemplo simplemente muestra un input que recibe un texto que se ve reflejado en el titulo del sitio."),Vo=m(),Fo=f("p"),Ko=v("Basados en el ejemplo anterior sabemos que "),Zo=f("code"),Wo=v("value "),Xo=v("es un valor constante dentro de un momento/renderizado en particular, también sabemos que los manejadores de eventos pueden “ver” el estado de "),Yo=f("code"),en=v("value"),an=v(" dentro del render al que pertenecen, y esto mismo es verdad para los efectos."),on=m(),nn=f("p"),sn=v("La función de efecto es una simple función que tiene acceso a los valores dentro de su scope, y esta es diferente en cada renderizado. En cada versión del rederizado la función de efecto "),tn=f("em"),rn=v("“ve”"),cn=v("  un valor distinto para la variable "),ln=f("code"),dn=v("value"),pn=v("."),un=m(),mn=f("p"),fn=v("He aquí la diferencia en el modelo mental entre los métodos del ciclo de vida y hooks. Las funciones de efectos pertenecen a un renderizado en particular al igual que los manejadores de efectos, por lo tanto no es necesario que “reciban” valores especiales o existan “watchers” o “bindings” para acceder al estado."),vn=m(),hn=f("p"),kn=v("El nuevo modelo mental al utilizar efectos está más relacionado con la posibilidad de sincronizar las props y estado con alguna “cosa” fuera del árbol de componentes, como en el ejemplo anterior, el efecto modificaba el título del documento que está fuera del árbol de componentes pero se sincroniza con el estado del componente renderizado. Es completamente diferente al modelo anterior de "),bn=f("code"),qn=v("montar/actualizar/desmontar"),En=v(" intentar escribir un efecto que tiene diferentes comportamientos basados en el “momento” en que se encuentra es el camino errado."),this.h()},l(e){t(a.$$.fragment,e),o=h(e),n=k(e,"H4",{id:!0});var s=b(n);c=q(s,"¿Qué son los Hooks en React y por que?"),s.forEach(E),i=h(e),u=k(e,"P",{});var r=b(u);j=q(r,"Cuando esta nueva API fue anunciada en la React Conf en OCtubre de 2018 causo algo de controversia, muchos aplaudieron emocionados por las nuevas posibilidades y muchos otros quedaron con la duda del por que esto sería necesario cuando ya teníamos una API standard en forma de clases y varios patrones de diseño altamente probados."),r.forEach(E),P=h(e),R=k(e,"P",{});var l=b(R);$=q(l,"Bueno, el equipo tras React y la comunidad en general ya habían  identificado varios problemas durante la primera era de la librería , problemas que llevaron a la creación de la api de Hooks."),l.forEach(E),C=h(e),I=k(e,"P",{});var d=b(I);L=q(d,"Desde la publicación de React hemos podido entender que el uso de componentes y un ciclo de datos de una dirección ayudan a organizar el desarrollo de nuestra UI en partes pequeñas, inpendientes y reutilizables. Pero a pesar de esto, muchas veces nos hemos encontrado con la imposibilidad de continuar dividiendo un componente complejo dado que la implementación es dependendiente del estado impidiendo  su extracción. Muchas veces esto es lo que muchos detractores de React se refieren a la imposibilidad inherente de la librería para separar las responsabilidades."),d.forEach(E),S=h(e),A=k(e,"P",{});var p=b(A);O=q(p,"Este tipo de casos son muy comunes en el desarrollo de aplicaciones complejas, casos como animaciones, manejo de múltiples formularios, conexión con datos externos, etc"),p.forEach(E),w=h(e),D=k(e,"P",{});var m=b(D);T=q(m,"Normalmente las soluciones implementadas en estos casos caen en unos de estos tres tipos."),m.forEach(E),N=h(e),U=k(e,"UL",{});var f=b(U);G=k(f,"LI",{});var v=b(G);B=k(v,"STRONG",{});var g=b(B);M=q(g,"Componentes gigantes"),g.forEach(E),Q=q(v,", que claramente son dificiles de mantener, refactorizar y testear"),v.forEach(E),_=h(f),J=k(f,"LI",{});var y=b(J);V=k(y,"STRONG",{});var z=b(V);F=q(z,"Lógica duplicada"),z.forEach(E),K=q(y," entre diferentes componentes lo que dificulta la mantenibilidad del código o fomenta la creación de abstracciones aún más complejas"),y.forEach(E),Z=h(f),W=k(f,"LI",{});var x=b(W);X=k(x,"STRONG",{});var H=b(X);Y=q(H,"Patrones de diseño compuestos"),H.forEach(E),ee=q(x,"  como mezclas entres render props y high-order components"),x.forEach(E),f.forEach(E),ae=h(e),oe=k(e,"P",{});var gn=b(oe);ne=q(gn,"Entonces basado en todos estos problemas nacio Hooks, como un intento (bastante certero a decir verdad) de reparar todos esos problemas de un sólo golpe."),gn.forEach(E),se=h(e),te=k(e,"P",{});var yn=b(te);re=q(yn,"La idea trás hooks mantiene la filosofía implementada por react, composición y un flujo de datos explicito, pero ya no sólo entre componentes, si no, dentro de un componente."),yn.forEach(E),ce=h(e),ie=k(e,"P",{});var zn=b(ie);le=q(zn,"una crítica de los primeros días de hooks es que se acrecenta la curva de aprendizaje de React ya que existen multiples conceptos y formas de resolver un mismo problema, pero: Si se adopta (como se ha hecho hasta ahora) el uso de hooks como la formar primaria de escribir una aplicación React, en realidad se reduciría el número de conceptos con los que hay que lidiar. Aquí los principiantes lo tienen algo más fácil. No tiene un modelo mental que modificar y sólo deben ir directamente a utilizar y entender Hooks.\nPara los más viejitos, quizá sea una curva de aprendizaje un poco más empinada ya que el modelo mental internalizado genera ciertos choques que impiden entender del todo el funcionamiento de hooks. useEffect te estoy mirando a ti."),zn.forEach(E),de=h(e),pe=k(e,"H4",{id:!0});var jn=b(pe);ue=q(jn,"¿Entonces que son los hooks?"),jn.forEach(E),me=h(e),fe=k(e,"P",{});var Pn=b(fe);ve=q(Pn,"El principio básico del que nace esta implementación es en la reutilización de código.\nHasta antes de la llegada de esta API existían muchas formas de compartir o reutilizar código. funciones utilitarias para ciertos cálculos o componentes, que por cierto también son una función.\nEl inconveniente de los componentes a la hora de reutilizar código es que estos deben de renderizar algo, por lo que si es necesario compartir logica que no corresponda con nuestra UI se tornan algo incovenientes dando nacimiento así a patrones más complejos como los high-order components y render props, que como comenté en el episodio anterior buscan una forma de compartir lógica entre diversos componentes, patrones también conocidos como headless components."),Pn.forEach(E),he=h(e),ke=k(e,"P",{});var Rn=b(ke);be=q(Rn,"Pero, las funciones parecen ser el mecanismo adecuado para la reutilización de código no? Además Javascript hace que la tarea de mover lógica entre funciones sea directa dado su soporte de primer orden y tomando todo lo aprendido desde la programación funcional donde una función es la unidad atómica de tu programa.\nEl problema con las funciones es que, no es posible tener estado en su interior, estado desde el punto de vista de React. ANtes de hooks no era posible extraer lógica relacionada con el estado de la UI tal como “animar un valor ” sin necesitar una refactorización masiva o la introducciones de patrones más complejos o mecanismos con una nueva curva de aprendizaje., como reactive programming."),Rn.forEach(E),qe=h(e),Ee=k(e,"P",{});var xn=b(Ee);ge=q(xn,"Hooks propone exactamente una solución a esto. La api de hooks permite utilizar carecterísitcas inherentes de React, como el estado, directamente en una función, y como estos hooks son simples funciones en Javascript, es posible combinarlas y componerlas como más consideremos adecuado dando nacimiento así a los hooks personalizados o “custom hooks”. Permitiendo a cada desarrollador refactorizar problemas complejos o lógica duplicada en simples funciones que se pueden compartir en toda la aplicación."),xn.forEach(E),ye=h(e),ze=k(e,"P",{});var Hn=b(ze);je=q(Hn,"React ofrece con esta nueva API algunos bloques de construcción básicos tales como:"),Hn.forEach(E),Pe=h(e),Re=k(e,"UL",{});var $n=b(Re);xe=k($n,"LI",{});var Cn=b(xe);He=k(Cn,"STRONG",{});var In=b(He);$e=q(In,"useState"),In.forEach(E),Ce=q(Cn,": un hooks que permite mantener estado dentro de tu componente funcional"),Cn.forEach(E),Ie=h($n),Le=k($n,"LI",{});var Ln=b(Le);Se=k(Ln,"STRONG",{});var Sn=b(Se);Ae=q(Sn,"useReducer"),Sn.forEach(E),Oe=q(Ln,": una variante de useState que permite manejar estados más complejos utilizando una función reducer."),Ln.forEach(E),we=h($n),De=k($n,"LI",{});var An=b(De);Te=k(An,"STRONG",{});var On=b(Te);Ne=q(On,"useEffect"),On.forEach(E),Ue=q(An,": Quizá el hook más complejo de entender  dado la insistencia de muchos en relacionarlo con los métodos del ciclo de vida de un componente tipo clase. Este es el hook que permite la realización de la obtención de datos, suscripciones o manipulación manual del DOM, esta diseñado para efectuar efectos secundarios o side effects."),An.forEach(E),Ge=h($n),Be=k($n,"LI",{});var wn=b(Be);Me=k(wn,"STRONG",{});var Dn=b(Me);Qe=q(Dn,"useContext"),Dn.forEach(E),_e=q(wn,": El hook que democratizó la API context."),wn.forEach(E),$n.forEach(E),Je=h(e),Ve=k(e,"P",{});var Tn=b(Ve);Fe=q(Tn,"Los hooks son funciones totalmente encapsuladas, creando un estado local aislado dentro del componente en que se ejecuta, es decir, no son una forma de compartir estado, si no, una forma de compartir logica con estado."),Tn.forEach(E),Ke=h(e),Ze=k(e,"H4",{id:!0});var Nn=b(Ze);We=q(Nn,"Entonces que pasó con las clases? las olvidamos.?"),Nn.forEach(E),Xe=h(e),Ye=k(e,"P",{});var Un=b(Ye);ea=q(Un,"Los hooks personalizados son quizá la parte más interesante de esta api y para ello React provee de hooks básicos o pilares, para construir abstracciones poderosas, al ofrecer estos hooks básicos se cubre también otra necesidad: son suficientes para definir un componente en general, es por esto que la comunidad empuja a que Hooks sea la forma principal para construir componentes React."),Un.forEach(E),aa=h(e),oa=k(e,"P",{});var Gn=b(oa);na=q(Gn,"El equipo tras React no tiene planes de jubilar las clases, pero dado que hooks ha sido aceptado enormemente, no hay razón para que existan dos formas recomendadas de escribir componentes.\nLos hooks pueden cubrir todos los casos de uso de los componentes de clase y proveer más flexibilidad, por lo que se recomienda que este sea el camino de aquí en adelante."),Gn.forEach(E),sa=h(e),ta=k(e,"P",{});var Bn=b(ta);ra=q(Bn,"Algo que también es importante es entender que el funcionamiento de los hooks en las entrañas de React no es ninguna magia vudú, si no. Todo lo contrario. Es una implementación bastante simple."),Bn.forEach(E),ca=h(e),ia=k(e,"P",{});var Mn=b(ia);la=q(Mn,"React mantiene una lista de los hooks usados en cada componente, y mueve el puntero al siguiente en la lista cada vez que un hook es utilizado. Gracias a la existencia de las “reglas de los hooks”, el orden es el mismo en cada renderizado, permitiendo así que se pueda proveer el componente con el estado correcto en cada llamada."),Mn.forEach(E),da=h(e),pa=k(e,"P",{});var Qn=b(pa);ua=q(Qn,"El estado de los hooks tampoco es nada nuevo ni especial, este es mantenido por React de la misma forma que se hacía para el estado en los componentes de clase. React posee una cola de actualización interna que se utiliza como terreno de la verdad (source of truth) para cualquier estado, sin importar como este fue definido en el componente."),Qn.forEach(E),ma=h(e),fa=k(e,"P",{});var _n=b(fa);va=q(_n,"Hooks no utiliza Proxies o getters que han sido muy popularizados en algunas modernas librerías. Básicamente la ejecución de los hooks es muy similar a Array.push y Array.pop"),_n.forEach(E),ha=h(e),ka=k(e,"P",{});var Jn=b(ka);ba=q(Jn,"Entonces, si estas comenzando con React. Enfoca tu búsqueda de información en ejemplos y contenido que muestre el desarrollo con hooks como pilar principal, si ya estas avanzado en el uso de la librería, ciertamente no es necesario que refactorices todo tu código para usar hooks, React tiene retro-compatibilidad y las clases no han sido marcadas como deprecated por lo que simplemente deberías enfocarte en el cambio de tu modelo mental y comenzar a crear nuevos features con la nueva api"),Jn.forEach(E),qa=h(e),Ea=k(e,"H4",{id:!0});var Vn=b(Ea);ga=q(Vn,"¿Por qué hablo de un cambio de modelo mental?"),Vn.forEach(E),ya=h(e),za=k(e,"P",{});var Fn=b(za);ja=q(Fn,"Antes de la llegada oficial de Hooks la forma de construir aplicaciones con React estaba basada principalmente en el uso de clases y sus métodos de ciclos de vida. Los componentes funcionales o “stateless” eran incluso llamados “tontos” (dumb components) pues solo eran utilizados para renderizar partes de la UI sin realmente efectuar alguna acción dinámica, mas allá de representar el contenido de sus props."),Fn.forEach(E),Pa=h(e),Ra=k(e,"P",{});var Kn=b(Ra);xa=q(Kn,"Hooks, presenta una forma distinta de manejar un componente, los métodos de ciclos de vida ya no existen o se han vuelto redundantes transformando la forma en que desarrollamos a un método más cercano a la programación funcional."),Ha=k(Kn,"BR",{}),$a=h(Kn),Ca=k(Kn,"CODE",{});var Zn=b(Ca);Ia=q(Zn,"React.useEffect"),Zn.forEach(E),La=q(Kn," es el hook que se encarga de efectuar todas las mismas acciones que se podían hacer con los métodos de ciclo de vida, pero en realidad no es un reemplazo uno a uno de aquellos métodos, si no, una forma diferente de efectuar acciones sobre el component."),Kn.forEach(E),Sa=h(e),Aa=k(e,"P",{});var Wn=b(Aa);Oa=q(Wn,"He aquí el cambio de modelo mental, ahora ya no estamos escribiendo clases, estamos escribiendo funciones que tiene un método de efectuar side effects."),Wn.forEach(E),wa=h(e),Da=k(e,"P",{});var Xn=b(Da);Ta=q(Xn,"Los “effects” están relacionados con el modelo mental que tenemos sobre el renderizado de un componente y cómo este se relaciona con su estado."),Xn.forEach(E),Na=h(e),Ua=k(e,"P",{});var Yn=b(Ua);Ga=q(Yn,"Como ejemplo"),Yn.forEach(E),Ba=h(e),Ma=k(e,"PRE",{class:!0}),b(Ma).forEach(E),Qa=h(e),_a=k(e,"P",{});var es=b(_a);Ja=q(es,"En este pequeño trozo de código ¿qué quiere decir el renderizado condicional? ¿el valor de "),Va=k(es,"CODE",{});var as=b(Va);Fa=q(as,"isHide"),as.forEach(E),Ka=q(es," vigila los cambios que ocurren en el state? En general, al usar "),Za=k(es,"CODE",{});var os=b(Za);Wa=q(os,"useState"),os.forEach(E),Xa=q(es," lo que se obtiene como primer valor es sólo eso, un valor, no hay data binding ni watchers, ni observables ni nada más. Sólo un valor, que en este caso es un boolean."),es.forEach(E),Ya=h(e),eo=k(e,"P",{});var ns=b(eo);ao=q(ns,"Por cada click que se haga en el botón, se realiza una llamada a  "),oo=k(ns,"CODE",{});var ss=b(oo);no=q(ss,"setIsHide"),ss.forEach(E),so=q(ns,", es decir, un cambio en el estado y esto inicia un nuevo renderizado del componente. En cada una de estas nuevas llamadas al componente, "),to=k(ns,"CODE",{});var ts=b(to);ro=q(ts,"useState"),ts.forEach(E),co=q(ns," retornará un nuevo valor a la variable "),io=k(ns,"CODE",{});var rs=b(io);lo=q(rs,"isHide"),rs.forEach(E),po=q(ns,"."),ns.forEach(E),uo=h(e),mo=k(e,"P",{});var cs=b(mo);fo=q(cs,"Por cada cambio en el estado, React ejecuta una nueva llamada a la función con la que declaramos el componente, así, en cada ocasión un nuevo resultado es retornado por la llamada y en cada llamada un nuevo valor para "),vo=k(cs,"CODE",{});var is=b(vo);ho=q(is,"isHide"),is.forEach(E),ko=q(cs," es visto por la función."),cs.forEach(E),bo=h(e),qo=k(e,"P",{});var ls=b(qo);Eo=q(ls,"Es así que esta linea "),go=k(ls,"CODE",{});var ds=b(go);yo=q(ds,"{isHide? null : text}"),ds.forEach(E),zo=q(ls," simplemente compara un valor constante y local "),jo=k(ls,"CODE",{});var ps=b(jo);Po=q(ps,"isHide"),ps.forEach(E),Ro=q(ls," para definir si se renderiza o no el texto."),ls.forEach(E),xo=h(e),Ho=k(e,"P",{});var us=b(Ho);$o=q(us,"Es decir, los valores retornados por "),Co=k(us,"CODE",{});var ms=b(Co);Io=q(ms,"useState"),ms.forEach(E),Lo=q(us," son constantes dentro de un renderizado en particular, la variable no cambia en el tiempo, no es un stream continuo de datos, al contrario, es el componente que es llamado en varias ocasiones con un valor de estado distinto. Esto también es verdad para los manejadores de eventos (eventHandlers) que hagan uso del valor de estado. El manejador de eventos "),So=k(us,"EM",{});var fs=b(So);Ao=q(fs,"pertenece"),fs.forEach(E),Oo=q(us," a un renderizado en particular."),us.forEach(E),wo=h(e),Do=k(e,"P",{});var vs=b(Do);To=q(vs,"Por extensión llegamos a los side effects."),vs.forEach(E),No=h(e),Uo=k(e,"P",{});var hs=b(Uo);Go=q(hs,"Para esto podemos usar un sencillo ejemplo"),hs.forEach(E),Bo=h(e),Mo=k(e,"PRE",{class:!0}),b(Mo).forEach(E),Qo=h(e),_o=k(e,"P",{});var ks=b(_o);Jo=q(ks,"Este ejemplo simplemente muestra un input que recibe un texto que se ve reflejado en el titulo del sitio."),ks.forEach(E),Vo=h(e),Fo=k(e,"P",{});var bs=b(Fo);Ko=q(bs,"Basados en el ejemplo anterior sabemos que "),Zo=k(bs,"CODE",{});var qs=b(Zo);Wo=q(qs,"value "),qs.forEach(E),Xo=q(bs,"es un valor constante dentro de un momento/renderizado en particular, también sabemos que los manejadores de eventos pueden “ver” el estado de "),Yo=k(bs,"CODE",{});var Es=b(Yo);en=q(Es,"value"),Es.forEach(E),an=q(bs," dentro del render al que pertenecen, y esto mismo es verdad para los efectos."),bs.forEach(E),on=h(e),nn=k(e,"P",{});var gs=b(nn);sn=q(gs,"La función de efecto es una simple función que tiene acceso a los valores dentro de su scope, y esta es diferente en cada renderizado. En cada versión del rederizado la función de efecto "),tn=k(gs,"EM",{});var ys=b(tn);rn=q(ys,"“ve”"),ys.forEach(E),cn=q(gs,"  un valor distinto para la variable "),ln=k(gs,"CODE",{});var zs=b(ln);dn=q(zs,"value"),zs.forEach(E),pn=q(gs,"."),gs.forEach(E),un=h(e),mn=k(e,"P",{});var js=b(mn);fn=q(js,"He aquí la diferencia en el modelo mental entre los métodos del ciclo de vida y hooks. Las funciones de efectos pertenecen a un renderizado en particular al igual que los manejadores de efectos, por lo tanto no es necesario que “reciban” valores especiales o existan “watchers” o “bindings” para acceder al estado."),js.forEach(E),vn=h(e),hn=k(e,"P",{});var Ps=b(hn);kn=q(Ps,"El nuevo modelo mental al utilizar efectos está más relacionado con la posibilidad de sincronizar las props y estado con alguna “cosa” fuera del árbol de componentes, como en el ejemplo anterior, el efecto modificaba el título del documento que está fuera del árbol de componentes pero se sincroniza con el estado del componente renderizado. Es completamente diferente al modelo anterior de "),bn=k(Ps,"CODE",{});var Rs=b(bn);qn=q(Rs,"montar/actualizar/desmontar"),Rs.forEach(E),En=q(Ps," intentar escribir un efecto que tiene diferentes comportamientos basados en el “momento” en que se encuentra es el camino errado."),Ps.forEach(E),this.h()},h(){g(n,"id","¿qué-son-los-hooks-en-react-y-por-que"),g(pe,"id","¿entonces-que-son-los-hooks"),g(Ze,"id","entonces-que-pasó-con-las-clases-las-olvidamos"),g(Ea,"id","¿por-qué-hablo-de-un-cambio-de-modelo-mental"),g(Ma,"class","language-javascript"),g(Mo,"class","language-javascript")},m(e,s){r(a,e,s),y(e,o,s),y(e,n,s),z(n,c),y(e,i,s),y(e,u,s),z(u,j),y(e,P,s),y(e,R,s),z(R,$),y(e,C,s),y(e,I,s),z(I,L),y(e,S,s),y(e,A,s),z(A,O),y(e,w,s),y(e,D,s),z(D,T),y(e,N,s),y(e,U,s),z(U,G),z(G,B),z(B,M),z(G,Q),z(U,_),z(U,J),z(J,V),z(V,F),z(J,K),z(U,Z),z(U,W),z(W,X),z(X,Y),z(W,ee),y(e,ae,s),y(e,oe,s),z(oe,ne),y(e,se,s),y(e,te,s),z(te,re),y(e,ce,s),y(e,ie,s),z(ie,le),y(e,de,s),y(e,pe,s),z(pe,ue),y(e,me,s),y(e,fe,s),z(fe,ve),y(e,he,s),y(e,ke,s),z(ke,be),y(e,qe,s),y(e,Ee,s),z(Ee,ge),y(e,ye,s),y(e,ze,s),z(ze,je),y(e,Pe,s),y(e,Re,s),z(Re,xe),z(xe,He),z(He,$e),z(xe,Ce),z(Re,Ie),z(Re,Le),z(Le,Se),z(Se,Ae),z(Le,Oe),z(Re,we),z(Re,De),z(De,Te),z(Te,Ne),z(De,Ue),z(Re,Ge),z(Re,Be),z(Be,Me),z(Me,Qe),z(Be,_e),y(e,Je,s),y(e,Ve,s),z(Ve,Fe),y(e,Ke,s),y(e,Ze,s),z(Ze,We),y(e,Xe,s),y(e,Ye,s),z(Ye,ea),y(e,aa,s),y(e,oa,s),z(oa,na),y(e,sa,s),y(e,ta,s),z(ta,ra),y(e,ca,s),y(e,ia,s),z(ia,la),y(e,da,s),y(e,pa,s),z(pa,ua),y(e,ma,s),y(e,fa,s),z(fa,va),y(e,ha,s),y(e,ka,s),z(ka,ba),y(e,qa,s),y(e,Ea,s),z(Ea,ga),y(e,ya,s),y(e,za,s),z(za,ja),y(e,Pa,s),y(e,Ra,s),z(Ra,xa),z(Ra,Ha),z(Ra,$a),z(Ra,Ca),z(Ca,Ia),z(Ra,La),y(e,Sa,s),y(e,Aa,s),z(Aa,Oa),y(e,wa,s),y(e,Da,s),z(Da,Ta),y(e,Na,s),y(e,Ua,s),z(Ua,Ga),y(e,Ba,s),y(e,Ma,s),Ma.innerHTML='<code class="language-javascript">    <span class="token keyword">const</span> <span class="token function-variable function">HideText</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> text <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n       <span class="token keyword">const</span> <span class="token punctuation">[</span>isHide<span class="token punctuation">,</span> setIsHide<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n       <span class="token keyword">const</span> <span class="token function-variable function">onClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n           <span class="token function">setIsHide</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prevState</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n               <span class="token keyword">return</span> <span class="token operator">!</span>prevState\n    \t   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>\n       <span class="token punctuation">&#125;</span>\n       <span class="token keyword">return</span> <span class="token punctuation">(</span>\n           <span class="token operator">&lt;</span>div<span class="token operator">></span>\n               <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span>onClick<span class="token punctuation">&#125;</span><span class="token operator">></span>Toggle Hide<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n               <span class="token punctuation">&#123;</span>isHide<span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> text<span class="token punctuation">&#125;</span>\n            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n       <span class="token punctuation">)</span>\n    <span class="token punctuation">&#125;</span></code>',y(e,Qa,s),y(e,_a,s),z(_a,Ja),z(_a,Va),z(Va,Fa),z(_a,Ka),z(_a,Za),z(Za,Wa),z(_a,Xa),y(e,Ya,s),y(e,eo,s),z(eo,ao),z(eo,oo),z(oo,no),z(eo,so),z(eo,to),z(to,ro),z(eo,co),z(eo,io),z(io,lo),z(eo,po),y(e,uo,s),y(e,mo,s),z(mo,fo),z(mo,vo),z(vo,ho),z(mo,ko),y(e,bo,s),y(e,qo,s),z(qo,Eo),z(qo,go),z(go,yo),z(qo,zo),z(qo,jo),z(jo,Po),z(qo,Ro),y(e,xo,s),y(e,Ho,s),z(Ho,$o),z(Ho,Co),z(Co,Io),z(Ho,Lo),z(Ho,So),z(So,Ao),z(Ho,Oo),y(e,wo,s),y(e,Do,s),z(Do,To),y(e,No,s),y(e,Uo,s),z(Uo,Go),y(e,Bo,s),y(e,Mo,s),Mo.innerHTML='<code class="language-javascript">    <span class="token keyword">const</span> <span class="token function-variable function">TitleUpdater</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n    \t<span class="token keyword">const</span> <span class="token punctuation">[</span>value<span class="token punctuation">,</span> setValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span>\n        \n        <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n        \tdocument<span class="token punctuation">.</span>title <span class="token operator">=</span> value\n        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>\n        \n        <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n        \t<span class="token function">setValue</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span>\n        <span class="token punctuation">&#125;</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    \t    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n    \t\t    <span class="token operator">&lt;</span>p<span class="token operator">></span>Ingresa el titulo<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n    \t    \t<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> value<span class="token operator">=</span><span class="token punctuation">&#123;</span>value<span class="token punctuation">&#125;</span> onChange<span class="token operator">=</span><span class="token punctuation">&#123;</span>handleChange<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>\n         \t<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n        <span class="token punctuation">)</span>\n    <span class="token punctuation">&#125;</span></code>',y(e,Qo,s),y(e,_o,s),z(_o,Jo),y(e,Vo,s),y(e,Fo,s),z(Fo,Ko),z(Fo,Zo),z(Zo,Wo),z(Fo,Xo),z(Fo,Yo),z(Yo,en),z(Fo,an),y(e,on,s),y(e,nn,s),z(nn,sn),z(nn,tn),z(tn,rn),z(nn,cn),z(nn,ln),z(ln,dn),z(nn,pn),y(e,un,s),y(e,mn,s),z(mn,fn),y(e,vn,s),y(e,hn,s),z(hn,kn),z(hn,bn),z(bn,qn),z(hn,En),gn=!0},p(e,o){const n={};2&o&&(n.$$scope={dirty:o,ctx:e}),a.$set(n)},i(e){gn||(l(a.$$.fragment,e),gn=!0)},o(e){d(a.$$.fragment,e),gn=!1},d(e){p(a,e),e&&E(o),e&&E(n),e&&E(i),e&&E(u),e&&E(P),e&&E(R),e&&E(C),e&&E(I),e&&E(S),e&&E(A),e&&E(w),e&&E(D),e&&E(N),e&&E(U),e&&E(ae),e&&E(oe),e&&E(se),e&&E(te),e&&E(ce),e&&E(ie),e&&E(de),e&&E(pe),e&&E(me),e&&E(fe),e&&E(he),e&&E(ke),e&&E(qe),e&&E(Ee),e&&E(ye),e&&E(ze),e&&E(Pe),e&&E(Re),e&&E(Je),e&&E(Ve),e&&E(Ke),e&&E(Ze),e&&E(Xe),e&&E(Ye),e&&E(aa),e&&E(oa),e&&E(sa),e&&E(ta),e&&E(ca),e&&E(ia),e&&E(da),e&&E(pa),e&&E(ma),e&&E(fa),e&&E(ha),e&&E(ka),e&&E(qa),e&&E(Ea),e&&E(ya),e&&E(za),e&&E(Pa),e&&E(Ra),e&&E(Sa),e&&E(Aa),e&&E(wa),e&&E(Da),e&&E(Na),e&&E(Ua),e&&E(Ba),e&&E(Ma),e&&E(Qa),e&&E(_a),e&&E(Ya),e&&E(eo),e&&E(uo),e&&E(mo),e&&E(bo),e&&E(qo),e&&E(xo),e&&E(Ho),e&&E(wo),e&&E(Do),e&&E(No),e&&E(Uo),e&&E(Bo),e&&E(Mo),e&&E(Qo),e&&E(_o),e&&E(Vo),e&&E(Fo),e&&E(on),e&&E(nn),e&&E(un),e&&E(mn),e&&E(vn),e&&E(hn)}}}function C(e){let a,o;const u=[e[0],I];let m={$$slots:{default:[$]},$$scope:{ctx:e}};for(let s=0;s<u.length;s+=1)m=n(m,u[s]);return a=new P({props:m}),{c(){s(a.$$.fragment)},l(e){t(a.$$.fragment,e)},m(e,n){r(a,e,n),o=!0},p(e,[o]){const n=1&o?c(u,[1&o&&i(e[0]),0&o&&i(I)]):{};2&o&&(n.$$scope={dirty:o,ctx:e}),a.$set(n)},i(e){o||(l(a.$$.fragment,e),o=!0)},o(e){d(a.$$.fragment,e),o=!1},d(e){p(a,e)}}}const I={date:"2020-07-29T19:14:38.000Z",banner:"https://res.cloudinary.com/matiasfha/image/upload/v1596050181/ferenc-almasi-tvHtIGbbjMo-unsplash_kq9ukw.jpg",keywords:["React","Hooks"],tag:"Seed",title:"Que son los Hooks",description:"¿Qué son los Hooks en React? ¿De dónde nacen y por qué?",bannerCredit:'<span>Photo by <a href="https://unsplash.com/@flowforfrank?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Ferenc Almasi</a> on <a href="https://unsplash.com/s/photos/hooks?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></span>'};function L(e,a,o){return e.$$set=e=>{o(0,a=n(n({},a),u(e)))},[a=u(a)]}class S extends e{constructor(e){super(),a(this,e,L,C,o,{})}}export{S as default,I as metadata};
