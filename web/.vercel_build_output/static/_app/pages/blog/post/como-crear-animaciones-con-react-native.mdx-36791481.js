import{S as a,i as n,s as e,B as o,j as s,m as t,o as i,p as r,q as c,x as p,u as l,v as u,N as d,e as m,t as f,k as v,c as k,a as E,g as h,d as g,n as b,b as y,f as q,G as A,K as j}from"../../../chunks/vendor-64eebebd.js";import{P}from"../../../chunks/PostLayout-1d1b8b8e.js";import{E as C}from"../../../chunks/EggheadLesson-5d77fb7e.js";function D(a){let n,e,o,r,c,d,P,D,O,z,R,x,w,L,V,T,I,$,N,H,S,M,U,X,F,G,Y,B,K,J,Q,W,Z,_,aa,na,ea,oa,sa,ta,ia,ra,ca,pa,la,ua,da,ma,fa,va,ka,Ea,ha,ga,ba,ya,qa,Aa,ja,Pa,Ca,Da,Oa,za,Ra,xa,wa,La,Va,Ta,Ia,$a,Na,Ha,Sa,Ma,Ua,Xa,Fa,Ga,Ya,Ba,Ka,Ja,Qa,Wa,Za,_a,an,nn,en,on,sn,tn,rn,cn,pn,ln,un,dn,mn,fn,vn,kn,En,hn,gn,bn,yn,qn,An,jn,Pn,Cn,Dn,On,zn,Rn,xn,wn,Ln,Vn,Tn,In,$n,Nn,Hn,Sn,Mn,Un,Xn,Fn,Gn,Yn,Bn,Kn,Jn,Qn,Wn,Zn,_n,ae,ne,ee,oe,se,te,ie,re,ce,pe,le,ue,de,me,fe,ve,ke,Ee,he,ge,be,ye,qe,Ae,je,Pe,Ce,De,Oe,ze,Re,xe,we,Le,Ve,Te,Ie,$e,Ne,He,Se,Me,Ue,Xe,Fe,Ge,Ye,Be,Ke,Je,Qe,We,Ze,_e,ao,no,eo,oo,so,to,io,ro,co,po,lo,uo,mo,fo,vo,ko,Eo,ho,go,bo,yo,qo,Ao,jo,Po,Co,Do,Oo,zo,Ro,xo,wo,Lo,Vo,To,Io,$o,No,Ho,So,Mo,Uo,Xo,Fo,Go,Yo,Bo,Ko,Jo,Qo,Wo,Zo,_o,as,ns,es,os,ss,ts,is,rs,cs,ps,ls,us,ds,ms,fs,vs,ks,Es,hs,gs,bs,ys,qs,As,js,Ps,Cs,Ds,Os,zs,Rs,xs,ws,Ls,Vs,Ts,Is,$s,Ns,Hs,Ss,Ms,Us,Xs,Fs,Gs,Ys,Bs,Ks,Js,Qs,Ws,Zs,_s,at,nt,et,ot,st,tt,it,rt,ct,pt;return z=new C({props:{lessonId:"react-native-crear-animacion-con-react-native-y-la-api-animated"}}),{c(){n=m("p"),e=f("Las animaciones son parte importante de cualquier aplicación ya que permiten ofrece una mejor experiencia de uso siendo utilizadas como feedback para las acciones del usuario.\nReact Native ofrece una API para trabajar con animaciones directamente utilizando “just javascript”"),o=v(),r=m("p"),c=f("En este post revisaremos como utilizar esta caracterísitca para crear tus propias animaciones!."),d=v(),P=m("h2"),D=f("TLDR:"),O=v(),s(z.$$.fragment),R=v(),x=m("h1"),w=f("La API Animated"),L=v(),V=m("p"),T=f("React Native ofrece dos API complementarias: "),I=m("code"),$=f("Animated"),N=f(" para un control granular de valores específicos y "),H=m("code"),S=f("LayoutAnimation"),M=f(" para efectos animados globales en transacciones del layout."),U=v(),X=m("p"),F=f("La API "),G=m("code"),Y=f("Animated"),B=f(" fue diseñada para ofrecer control granular para crear diferentes patrones de interacción y con la mejor performance posible, es una api declarativa que permite control de inicio y fin de una animación."),K=v(),J=m("p"),Q=f("Esta API exporta seis componentes para animar, pero también permite crear tu propio componente utilizando "),W=m("code"),Z=f("Animated.createAnimatedComponent()"),_=f(".\nLos componentes animados por defecto son: "),aa=m("code"),na=f("View"),ea=f(", "),oa=m("code"),sa=f("Text"),ta=f(", "),ia=m("code"),ra=f("Image"),ca=f(", "),pa=m("code"),la=f("ScrollView"),ua=f(", "),da=m("code"),ma=f("FlatList"),fa=f(" y "),va=m("code"),ka=f("SectionList"),Ea=v(),ha=m("p"),ga=f("Así mismo, "),ba=m("code"),ya=f("Animated"),qa=f(" ofrece métodos para controlar los valores que estás animando como "),Aa=m("code"),ja=f("Animated.timing"),Pa=f(" y "),Ca=m("code"),Da=f("Animated.spring"),Oa=f(" y otros que permiten componer animaciones como: "),za=m("code"),Ra=f("Animated.parallel"),xa=f(", "),wa=m("code"),La=f("Animated.sequence"),Va=f(", "),Ta=m("code"),Ia=f("Animated.delay"),$a=f(" y "),Na=m("code"),Ha=f("Animated.loop"),Sa=f("."),Ma=v(),Ua=m("p"),Xa=f("Primero vamos a revisar algunos de estos métodos:"),Fa=v(),Ga=m("h2"),Ya=f("Animated.timing y Animated.spring"),Ba=v(),Ka=m("p"),Ja=f("Estos métodos permiten definir una animación, "),Qa=m("code"),Wa=f("timing"),Za=f(" permite definir un tiempo para ejecutar la animación y "),_a=m("code"),an=f("spring"),nn=f(" utiliza un modelo físico para determinar la velocidad para ejecutar la animación, es decir, no es controlado por el tiempo.\nAmbos métodos tienen una api similar aceptando casi los mismos parámetros"),en=v(),on=m("p"),sn=f("Revisemos un ejemplo"),tn=v(),rn=m("p"),cn=m("a"),pn=f("https://snack.expo.io/@matiasfh/example-translate-animation"),ln=v(),un=m("p"),dn=f("En este ejemplo podemos ver dos elementos y dos animaciones, una con "),mn=m("code"),fn=f("timing"),vn=f(" y la otra con "),kn=m("code"),En=f("spring"),hn=f("."),gn=v(),bn=m("p"),yn=f("Revisemos el código.\nLo primero que podemos ver dentro de la definicion de "),qn=m("code"),An=f("App"),jn=f(" es el uso de "),Pn=m("code"),Cn=f("React.useRef()"),Dn=v(),On=m("pre"),zn=v(),Rn=m("p"),xn=f("Aquí utilizamos "),wn=m("code"),Ln=f("useRef"),Vn=f(" para mantener una referencia a un valor sin necesidad de emitir un cambio de estado provocando un re-renderizado del componente, dentro del "),Tn=m("code"),In=f("ref"),$n=f(" creamos un valor para animar utilizando "),Nn=m("code"),Hn=f("new Animated.Value(0)"),Sn=f(" iniciando que el valor inicial será 0, luego definimos la función que iniciará la animación, en este caso es un manejador para el evento click de los botones"),Mn=v(),Un=m("pre"),Xn=v(),Fn=m("p"),Gn=f("Esta función declara y ejecuta la animación "),Yn=m("code"),Bn=f("timing"),Kn=f(". El primer argumento es el valor que se animará y luego recibe un objeto de configuración "),Jn=m("code"),Qn=f("toValue"),Wn=f(" que declara que se animará hasta obtener el valor 250 en un tiempo "),Zn=m("code"),_n=f("duration: 600"),ae=f(" (milisegundos). y definimos que se usará el driver nativo. Este último argumento es requerido por React Native como "),ne=m("code"),ee=f("true"),oe=f(" or "),se=m("code"),te=f("false"),ie=f("."),re=v(),ce=m("p"),pe=f("Sólo algunos valores pueden ser animados utilizando el driver nativo, tal como se describe en "),le=m("a"),ue=f("este post de la documentación oficial"),de=f(", los valores animables por el driver nativo son todos aquellos “no relacionados con el layout”, es decir no puedes animar nativamente (pero si al utilizar "),me=m("code"),fe=f("useNativeDriver: false"),ve=f(") propiedades de flexbox, tamaños (width, height) o posiciones."),ke=v(),Ee=m("p"),he=f("En este ejemplo también hay otra función que ejecuta la animación utilizando "),ge=m("code"),be=f("spring"),ye=v(),qe=m("pre"),Ae=v(),je=m("p"),Pe=f("El método spring solo recibe el valor al cual se quiere animar (sin tiempo).\nPuedes ver la diferencia entre ambas animaciones en el ejemplo de Snack."),Ce=v(),De=m("p"),Oe=f("Por cierto, en ambos casos se hizo una llamada al método "),ze=m("code"),Re=f("start()"),xe=f(" para iniciar la animación. "),we=m("code"),Le=f("start()"),Ve=f(" puede recibir un argumento. Un callback que es ejecutado cuando la animación terminó. Si la animación termino de forma correcta el callback será invocado con el argumento "),Te=m("code"),Ie=f("{finished:true}"),$e=f(", en caso contrario, si la animación, termino de forma errónea, o no se pudo completar (por ejemplo, por alguna interrupción al re-renderizar), el callback recibirá el parámetro "),Ne=m("code"),He=f("{finished:false}"),Se=v(),Me=m("h2"),Ue=f("Componentes animados"),Xe=v(),Fe=m("p"),Ge=f("Otro punto importante del ejemplo es el uso de componentes animados, en este caso "),Ye=m("code"),Be=f("Animated.View"),Ke=f(" este es un componente ofrecido por la API Animated que tiene el mismo comportamiento y props que el "),Je=m("code"),Qe=f("View"),We=f(" normal, pero contiene la lógica necesaria para efectuar los cambios en los estilos determinados por la función de animación."),Ze=v(),_e=m("pre"),ao=v(),no=m("p"),eo=f("La animación es en el fondo, una modificación a alguna propiedad del estilo del componente, en este caso "),oo=m("code"),so=f("animatedStyleTiming"),to=f(" que para este ejemplo está definido como"),io=v(),ro=m("pre"),co=v(),po=m("p"),lo=f("Este style, define la propiedad transform para indicar que se modificará la posición en "),uo=m("code"),mo=f("X"),fo=f(" del elemento."),vo=v(),ko=m("h2"),Eo=f("Easing"),ho=v(),go=m("p"),bo=f("Easing functions o funciones de aceleración especifican la forma o monto del cambio de un parámetro sobre durante el tiempo.\nLos objetos, en la vida real no inician o detienen su movimiento de forma abrupta, y casi nunca se mueven a una velocidad constante.\nReact Native ofrece varias funciones de aceleración para aplicar en nuestras animaciones, para su uso simplemente debes importar el objeto "),yo=m("code"),qo=f("Easing"),Ao=f(", como en el siguiente ejemplo"),jo=v(),Po=m("p"),Co=m("a"),Do=f("https://snack.expo.io/@matiasfh/rn-easing-examples"),Oo=v(),zo=m("p"),Ro=f("En este pequeño proyecto puedes ver la aplicación de las diferentes funciones de aceleración disponibles"),xo=v(),wo=m("pre"),Lo=v(),Vo=m("p"),To=f("Para aplicar una función de aceleración a tu animación solo debes definir la propiedad "),Io=m("code"),$o=f("easing"),No=f(" en la declaración de la animación."),Ho=v(),So=m("h2"),Mo=f("Interpolation"),Uo=v(),Xo=m("p"),Fo=f("Otro método que React Native dispone para controlar nuestras animaciones es la interpolación.\nCada propiedad definida para animar puede pasar por un proceso de interpolación primero, este proceso crea un mapa de entradas y salidas "),Go=m("code"),Yo=f("inputRange"),Bo=f(" y "),Ko=m("code"),Jo=f("ouputRange"),Qo=f("."),Wo=v(),Zo=m("p"),_o=f("Esto te permite utilizar tu valor de animación varias veces incluso si solo está definido como un valor entre "),as=m("code"),ns=f("0"),es=f(" y "),os=m("code"),ss=f("1"),ts=f(" al esquematizar tu rango de valores con un rango de la propiedad que quieres animar.\nVamos un ejemplo y animemos dos propiedades diferentes de dos componentes."),is=v(),rs=m("p"),cs=m("a"),ps=f("https://snack.expo.io/@matiasfh/rn-animation-interpolation-example"),ls=v(),us=m("p"),ds=f("En este ejemplo tenemos dos componentes animados. Un circulo rojo que se mueve hacia la derecha y un circulo azul que “desaparece” cambiando su opacidad, pero solo tenemos la definición de un valor de animación"),ms=v(),fs=m("pre"),vs=v(),ks=m("p"),Es=f("Valor de animación que comienza en 0 y que manipularemos para que cambie siempre entre valores 0 y 1.\nTambién se definen dos interpolaciones "),hs=m("code"),gs=f("translateInterpolation"),bs=f(" que genera un mapa de 0 a 0 y 1 a 250. Y "),ys=m("code"),qs=f("opacityInterpolation"),As=f(" que crea el mapa reverso 0 -> 1, y 1 -> 0. Indicando que cuando el valor de animación sea 0, el valor utilizado por la interpolación será "),js=m("code"),Ps=f("1"),Cs=f("."),Ds=v(),Os=m("pre"),zs=v(),Rs=m("p"),xs=f("También se modifica la función de animación para indicar que el valor de cambio será "),ws=m("code"),Ls=f("toValue: 1"),Vs=v(),Ts=m("pre"),Is=v(),$s=m("p"),Ns=f("Entonces al hacer click en el botón "),Hs=m("strong"),Ss=f("Animate"),Ms=f(" ambos componentes son animados, uno se mueve "),Us=m("code"),Xs=f("250px"),Fs=f(" a la derecha mientras el otro cambia su opacidad de 1 a 0."),Gs=v(),Ys=m("h1"),Bs=f("Conclusión"),Ks=v(),Js=m("p"),Qs=f("React Native provee de un control granular a la hora de crear animaciones permitiendo que sea solo tu imaginación el limite para definir como quieres que tu interfaz se comporte.\nPara poder animar componentes necesitas utilizar los componentes animados provistos en el objeto "),Ws=m("code"),Zs=f("Animated"),_s=f(" y luego definir un valor de animación utilizando "),at=m("code"),nt=f("useRef"),et=f(". Este valor de animación es después utilizado como parámetro para la función de animación que quieres utilizar como "),ot=m("code"),st=f("timing"),tt=f(" o  "),it=m("code"),rt=f("spring"),ct=f(".\nAdemás ofrece una forma de control aún mas detallada como la interpolación, que permite crear un mapa de valores pudiendo reutilizar el valor de animación como se desee."),this.h()},l(a){n=k(a,"P",{});var s=E(n);e=h(s,"Las animaciones son parte importante de cualquier aplicación ya que permiten ofrece una mejor experiencia de uso siendo utilizadas como feedback para las acciones del usuario.\nReact Native ofrece una API para trabajar con animaciones directamente utilizando “just javascript”"),s.forEach(g),o=b(a),r=k(a,"P",{});var i=E(r);c=h(i,"En este post revisaremos como utilizar esta caracterísitca para crear tus propias animaciones!."),i.forEach(g),d=b(a),P=k(a,"H2",{id:!0});var p=E(P);D=h(p,"TLDR:"),p.forEach(g),O=b(a),t(z.$$.fragment,a),R=b(a),x=k(a,"H1",{id:!0});var l=E(x);w=h(l,"La API Animated"),l.forEach(g),L=b(a),V=k(a,"P",{});var u=E(V);T=h(u,"React Native ofrece dos API complementarias: "),I=k(u,"CODE",{});var m=E(I);$=h(m,"Animated"),m.forEach(g),N=h(u," para un control granular de valores específicos y "),H=k(u,"CODE",{});var f=E(H);S=h(f,"LayoutAnimation"),f.forEach(g),M=h(u," para efectos animados globales en transacciones del layout."),u.forEach(g),U=b(a),X=k(a,"P",{});var v=E(X);F=h(v,"La API "),G=k(v,"CODE",{});var y=E(G);Y=h(y,"Animated"),y.forEach(g),B=h(v," fue diseñada para ofrecer control granular para crear diferentes patrones de interacción y con la mejor performance posible, es una api declarativa que permite control de inicio y fin de una animación."),v.forEach(g),K=b(a),J=k(a,"P",{});var q=E(J);Q=h(q,"Esta API exporta seis componentes para animar, pero también permite crear tu propio componente utilizando "),W=k(q,"CODE",{});var A=E(W);Z=h(A,"Animated.createAnimatedComponent()"),A.forEach(g),_=h(q,".\nLos componentes animados por defecto son: "),aa=k(q,"CODE",{});var j=E(aa);na=h(j,"View"),j.forEach(g),ea=h(q,", "),oa=k(q,"CODE",{});var C=E(oa);sa=h(C,"Text"),C.forEach(g),ta=h(q,", "),ia=k(q,"CODE",{});var pt=E(ia);ra=h(pt,"Image"),pt.forEach(g),ca=h(q,", "),pa=k(q,"CODE",{});var lt=E(pa);la=h(lt,"ScrollView"),lt.forEach(g),ua=h(q,", "),da=k(q,"CODE",{});var ut=E(da);ma=h(ut,"FlatList"),ut.forEach(g),fa=h(q," y "),va=k(q,"CODE",{});var dt=E(va);ka=h(dt,"SectionList"),dt.forEach(g),q.forEach(g),Ea=b(a),ha=k(a,"P",{});var mt=E(ha);ga=h(mt,"Así mismo, "),ba=k(mt,"CODE",{});var ft=E(ba);ya=h(ft,"Animated"),ft.forEach(g),qa=h(mt," ofrece métodos para controlar los valores que estás animando como "),Aa=k(mt,"CODE",{});var vt=E(Aa);ja=h(vt,"Animated.timing"),vt.forEach(g),Pa=h(mt," y "),Ca=k(mt,"CODE",{});var kt=E(Ca);Da=h(kt,"Animated.spring"),kt.forEach(g),Oa=h(mt," y otros que permiten componer animaciones como: "),za=k(mt,"CODE",{});var Et=E(za);Ra=h(Et,"Animated.parallel"),Et.forEach(g),xa=h(mt,", "),wa=k(mt,"CODE",{});var ht=E(wa);La=h(ht,"Animated.sequence"),ht.forEach(g),Va=h(mt,", "),Ta=k(mt,"CODE",{});var gt=E(Ta);Ia=h(gt,"Animated.delay"),gt.forEach(g),$a=h(mt," y "),Na=k(mt,"CODE",{});var bt=E(Na);Ha=h(bt,"Animated.loop"),bt.forEach(g),Sa=h(mt,"."),mt.forEach(g),Ma=b(a),Ua=k(a,"P",{});var yt=E(Ua);Xa=h(yt,"Primero vamos a revisar algunos de estos métodos:"),yt.forEach(g),Fa=b(a),Ga=k(a,"H2",{id:!0});var qt=E(Ga);Ya=h(qt,"Animated.timing y Animated.spring"),qt.forEach(g),Ba=b(a),Ka=k(a,"P",{});var At=E(Ka);Ja=h(At,"Estos métodos permiten definir una animación, "),Qa=k(At,"CODE",{});var jt=E(Qa);Wa=h(jt,"timing"),jt.forEach(g),Za=h(At," permite definir un tiempo para ejecutar la animación y "),_a=k(At,"CODE",{});var Pt=E(_a);an=h(Pt,"spring"),Pt.forEach(g),nn=h(At," utiliza un modelo físico para determinar la velocidad para ejecutar la animación, es decir, no es controlado por el tiempo.\nAmbos métodos tienen una api similar aceptando casi los mismos parámetros"),At.forEach(g),en=b(a),on=k(a,"P",{});var Ct=E(on);sn=h(Ct,"Revisemos un ejemplo"),Ct.forEach(g),tn=b(a),rn=k(a,"P",{});var Dt=E(rn);cn=k(Dt,"A",{href:!0,rel:!0});var Ot=E(cn);pn=h(Ot,"https://snack.expo.io/@matiasfh/example-translate-animation"),Ot.forEach(g),Dt.forEach(g),ln=b(a),un=k(a,"P",{});var zt=E(un);dn=h(zt,"En este ejemplo podemos ver dos elementos y dos animaciones, una con "),mn=k(zt,"CODE",{});var Rt=E(mn);fn=h(Rt,"timing"),Rt.forEach(g),vn=h(zt," y la otra con "),kn=k(zt,"CODE",{});var xt=E(kn);En=h(xt,"spring"),xt.forEach(g),hn=h(zt,"."),zt.forEach(g),gn=b(a),bn=k(a,"P",{});var wt=E(bn);yn=h(wt,"Revisemos el código.\nLo primero que podemos ver dentro de la definicion de "),qn=k(wt,"CODE",{});var Lt=E(qn);An=h(Lt,"App"),Lt.forEach(g),jn=h(wt," es el uso de "),Pn=k(wt,"CODE",{});var Vt=E(Pn);Cn=h(Vt,"React.useRef()"),Vt.forEach(g),wt.forEach(g),Dn=b(a),On=k(a,"PRE",{class:!0}),E(On).forEach(g),zn=b(a),Rn=k(a,"P",{});var Tt=E(Rn);xn=h(Tt,"Aquí utilizamos "),wn=k(Tt,"CODE",{});var It=E(wn);Ln=h(It,"useRef"),It.forEach(g),Vn=h(Tt," para mantener una referencia a un valor sin necesidad de emitir un cambio de estado provocando un re-renderizado del componente, dentro del "),Tn=k(Tt,"CODE",{});var $t=E(Tn);In=h($t,"ref"),$t.forEach(g),$n=h(Tt," creamos un valor para animar utilizando "),Nn=k(Tt,"CODE",{});var Nt=E(Nn);Hn=h(Nt,"new Animated.Value(0)"),Nt.forEach(g),Sn=h(Tt," iniciando que el valor inicial será 0, luego definimos la función que iniciará la animación, en este caso es un manejador para el evento click de los botones"),Tt.forEach(g),Mn=b(a),Un=k(a,"PRE",{class:!0}),E(Un).forEach(g),Xn=b(a),Fn=k(a,"P",{});var Ht=E(Fn);Gn=h(Ht,"Esta función declara y ejecuta la animación "),Yn=k(Ht,"CODE",{});var St=E(Yn);Bn=h(St,"timing"),St.forEach(g),Kn=h(Ht,". El primer argumento es el valor que se animará y luego recibe un objeto de configuración "),Jn=k(Ht,"CODE",{});var Mt=E(Jn);Qn=h(Mt,"toValue"),Mt.forEach(g),Wn=h(Ht," que declara que se animará hasta obtener el valor 250 en un tiempo "),Zn=k(Ht,"CODE",{});var Ut=E(Zn);_n=h(Ut,"duration: 600"),Ut.forEach(g),ae=h(Ht," (milisegundos). y definimos que se usará el driver nativo. Este último argumento es requerido por React Native como "),ne=k(Ht,"CODE",{});var Xt=E(ne);ee=h(Xt,"true"),Xt.forEach(g),oe=h(Ht," or "),se=k(Ht,"CODE",{});var Ft=E(se);te=h(Ft,"false"),Ft.forEach(g),ie=h(Ht,"."),Ht.forEach(g),re=b(a),ce=k(a,"P",{});var Gt=E(ce);pe=h(Gt,"Sólo algunos valores pueden ser animados utilizando el driver nativo, tal como se describe en "),le=k(Gt,"A",{href:!0,rel:!0});var Yt=E(le);ue=h(Yt,"este post de la documentación oficial"),Yt.forEach(g),de=h(Gt,", los valores animables por el driver nativo son todos aquellos “no relacionados con el layout”, es decir no puedes animar nativamente (pero si al utilizar "),me=k(Gt,"CODE",{});var Bt=E(me);fe=h(Bt,"useNativeDriver: false"),Bt.forEach(g),ve=h(Gt,") propiedades de flexbox, tamaños (width, height) o posiciones."),Gt.forEach(g),ke=b(a),Ee=k(a,"P",{});var Kt=E(Ee);he=h(Kt,"En este ejemplo también hay otra función que ejecuta la animación utilizando "),ge=k(Kt,"CODE",{});var Jt=E(ge);be=h(Jt,"spring"),Jt.forEach(g),Kt.forEach(g),ye=b(a),qe=k(a,"PRE",{class:!0}),E(qe).forEach(g),Ae=b(a),je=k(a,"P",{});var Qt=E(je);Pe=h(Qt,"El método spring solo recibe el valor al cual se quiere animar (sin tiempo).\nPuedes ver la diferencia entre ambas animaciones en el ejemplo de Snack."),Qt.forEach(g),Ce=b(a),De=k(a,"P",{});var Wt=E(De);Oe=h(Wt,"Por cierto, en ambos casos se hizo una llamada al método "),ze=k(Wt,"CODE",{});var Zt=E(ze);Re=h(Zt,"start()"),Zt.forEach(g),xe=h(Wt," para iniciar la animación. "),we=k(Wt,"CODE",{});var _t=E(we);Le=h(_t,"start()"),_t.forEach(g),Ve=h(Wt," puede recibir un argumento. Un callback que es ejecutado cuando la animación terminó. Si la animación termino de forma correcta el callback será invocado con el argumento "),Te=k(Wt,"CODE",{});var ai=E(Te);Ie=h(ai,"{finished:true}"),ai.forEach(g),$e=h(Wt,", en caso contrario, si la animación, termino de forma errónea, o no se pudo completar (por ejemplo, por alguna interrupción al re-renderizar), el callback recibirá el parámetro "),Ne=k(Wt,"CODE",{});var ni=E(Ne);He=h(ni,"{finished:false}"),ni.forEach(g),Wt.forEach(g),Se=b(a),Me=k(a,"H2",{id:!0});var ei=E(Me);Ue=h(ei,"Componentes animados"),ei.forEach(g),Xe=b(a),Fe=k(a,"P",{});var oi=E(Fe);Ge=h(oi,"Otro punto importante del ejemplo es el uso de componentes animados, en este caso "),Ye=k(oi,"CODE",{});var si=E(Ye);Be=h(si,"Animated.View"),si.forEach(g),Ke=h(oi," este es un componente ofrecido por la API Animated que tiene el mismo comportamiento y props que el "),Je=k(oi,"CODE",{});var ti=E(Je);Qe=h(ti,"View"),ti.forEach(g),We=h(oi," normal, pero contiene la lógica necesaria para efectuar los cambios en los estilos determinados por la función de animación."),oi.forEach(g),Ze=b(a),_e=k(a,"PRE",{class:!0}),E(_e).forEach(g),ao=b(a),no=k(a,"P",{});var ii=E(no);eo=h(ii,"La animación es en el fondo, una modificación a alguna propiedad del estilo del componente, en este caso "),oo=k(ii,"CODE",{});var ri=E(oo);so=h(ri,"animatedStyleTiming"),ri.forEach(g),to=h(ii," que para este ejemplo está definido como"),ii.forEach(g),io=b(a),ro=k(a,"PRE",{class:!0}),E(ro).forEach(g),co=b(a),po=k(a,"P",{});var ci=E(po);lo=h(ci,"Este style, define la propiedad transform para indicar que se modificará la posición en "),uo=k(ci,"CODE",{});var pi=E(uo);mo=h(pi,"X"),pi.forEach(g),fo=h(ci," del elemento."),ci.forEach(g),vo=b(a),ko=k(a,"H2",{id:!0});var li=E(ko);Eo=h(li,"Easing"),li.forEach(g),ho=b(a),go=k(a,"P",{});var ui=E(go);bo=h(ui,"Easing functions o funciones de aceleración especifican la forma o monto del cambio de un parámetro sobre durante el tiempo.\nLos objetos, en la vida real no inician o detienen su movimiento de forma abrupta, y casi nunca se mueven a una velocidad constante.\nReact Native ofrece varias funciones de aceleración para aplicar en nuestras animaciones, para su uso simplemente debes importar el objeto "),yo=k(ui,"CODE",{});var di=E(yo);qo=h(di,"Easing"),di.forEach(g),Ao=h(ui,", como en el siguiente ejemplo"),ui.forEach(g),jo=b(a),Po=k(a,"P",{});var mi=E(Po);Co=k(mi,"A",{href:!0,rel:!0});var fi=E(Co);Do=h(fi,"https://snack.expo.io/@matiasfh/rn-easing-examples"),fi.forEach(g),mi.forEach(g),Oo=b(a),zo=k(a,"P",{});var vi=E(zo);Ro=h(vi,"En este pequeño proyecto puedes ver la aplicación de las diferentes funciones de aceleración disponibles"),vi.forEach(g),xo=b(a),wo=k(a,"PRE",{class:!0}),E(wo).forEach(g),Lo=b(a),Vo=k(a,"P",{});var ki=E(Vo);To=h(ki,"Para aplicar una función de aceleración a tu animación solo debes definir la propiedad "),Io=k(ki,"CODE",{});var Ei=E(Io);$o=h(Ei,"easing"),Ei.forEach(g),No=h(ki," en la declaración de la animación."),ki.forEach(g),Ho=b(a),So=k(a,"H2",{id:!0});var hi=E(So);Mo=h(hi,"Interpolation"),hi.forEach(g),Uo=b(a),Xo=k(a,"P",{});var gi=E(Xo);Fo=h(gi,"Otro método que React Native dispone para controlar nuestras animaciones es la interpolación.\nCada propiedad definida para animar puede pasar por un proceso de interpolación primero, este proceso crea un mapa de entradas y salidas "),Go=k(gi,"CODE",{});var bi=E(Go);Yo=h(bi,"inputRange"),bi.forEach(g),Bo=h(gi," y "),Ko=k(gi,"CODE",{});var yi=E(Ko);Jo=h(yi,"ouputRange"),yi.forEach(g),Qo=h(gi,"."),gi.forEach(g),Wo=b(a),Zo=k(a,"P",{});var qi=E(Zo);_o=h(qi,"Esto te permite utilizar tu valor de animación varias veces incluso si solo está definido como un valor entre "),as=k(qi,"CODE",{});var Ai=E(as);ns=h(Ai,"0"),Ai.forEach(g),es=h(qi," y "),os=k(qi,"CODE",{});var ji=E(os);ss=h(ji,"1"),ji.forEach(g),ts=h(qi," al esquematizar tu rango de valores con un rango de la propiedad que quieres animar.\nVamos un ejemplo y animemos dos propiedades diferentes de dos componentes."),qi.forEach(g),is=b(a),rs=k(a,"P",{});var Pi=E(rs);cs=k(Pi,"A",{href:!0,rel:!0});var Ci=E(cs);ps=h(Ci,"https://snack.expo.io/@matiasfh/rn-animation-interpolation-example"),Ci.forEach(g),Pi.forEach(g),ls=b(a),us=k(a,"P",{});var Di=E(us);ds=h(Di,"En este ejemplo tenemos dos componentes animados. Un circulo rojo que se mueve hacia la derecha y un circulo azul que “desaparece” cambiando su opacidad, pero solo tenemos la definición de un valor de animación"),Di.forEach(g),ms=b(a),fs=k(a,"PRE",{class:!0}),E(fs).forEach(g),vs=b(a),ks=k(a,"P",{});var Oi=E(ks);Es=h(Oi,"Valor de animación que comienza en 0 y que manipularemos para que cambie siempre entre valores 0 y 1.\nTambién se definen dos interpolaciones "),hs=k(Oi,"CODE",{});var zi=E(hs);gs=h(zi,"translateInterpolation"),zi.forEach(g),bs=h(Oi," que genera un mapa de 0 a 0 y 1 a 250. Y "),ys=k(Oi,"CODE",{});var Ri=E(ys);qs=h(Ri,"opacityInterpolation"),Ri.forEach(g),As=h(Oi," que crea el mapa reverso 0 -> 1, y 1 -> 0. Indicando que cuando el valor de animación sea 0, el valor utilizado por la interpolación será "),js=k(Oi,"CODE",{});var xi=E(js);Ps=h(xi,"1"),xi.forEach(g),Cs=h(Oi,"."),Oi.forEach(g),Ds=b(a),Os=k(a,"PRE",{class:!0}),E(Os).forEach(g),zs=b(a),Rs=k(a,"P",{});var wi=E(Rs);xs=h(wi,"También se modifica la función de animación para indicar que el valor de cambio será "),ws=k(wi,"CODE",{});var Li=E(ws);Ls=h(Li,"toValue: 1"),Li.forEach(g),wi.forEach(g),Vs=b(a),Ts=k(a,"PRE",{class:!0}),E(Ts).forEach(g),Is=b(a),$s=k(a,"P",{});var Vi=E($s);Ns=h(Vi,"Entonces al hacer click en el botón "),Hs=k(Vi,"STRONG",{});var Ti=E(Hs);Ss=h(Ti,"Animate"),Ti.forEach(g),Ms=h(Vi," ambos componentes son animados, uno se mueve "),Us=k(Vi,"CODE",{});var Ii=E(Us);Xs=h(Ii,"250px"),Ii.forEach(g),Fs=h(Vi," a la derecha mientras el otro cambia su opacidad de 1 a 0."),Vi.forEach(g),Gs=b(a),Ys=k(a,"H1",{id:!0});var $i=E(Ys);Bs=h($i,"Conclusión"),$i.forEach(g),Ks=b(a),Js=k(a,"P",{});var Ni=E(Js);Qs=h(Ni,"React Native provee de un control granular a la hora de crear animaciones permitiendo que sea solo tu imaginación el limite para definir como quieres que tu interfaz se comporte.\nPara poder animar componentes necesitas utilizar los componentes animados provistos en el objeto "),Ws=k(Ni,"CODE",{});var Hi=E(Ws);Zs=h(Hi,"Animated"),Hi.forEach(g),_s=h(Ni," y luego definir un valor de animación utilizando "),at=k(Ni,"CODE",{});var Si=E(at);nt=h(Si,"useRef"),Si.forEach(g),et=h(Ni,". Este valor de animación es después utilizado como parámetro para la función de animación que quieres utilizar como "),ot=k(Ni,"CODE",{});var Mi=E(ot);st=h(Mi,"timing"),Mi.forEach(g),tt=h(Ni," o  "),it=k(Ni,"CODE",{});var Ui=E(it);rt=h(Ui,"spring"),Ui.forEach(g),ct=h(Ni,".\nAdemás ofrece una forma de control aún mas detallada como la interpolación, que permite crear un mapa de valores pudiendo reutilizar el valor de animación como se desee."),Ni.forEach(g),this.h()},h(){y(P,"id","tldr"),y(x,"id","la-api-animated"),y(Ga,"id","animatedtiming-y-animatedspring"),y(cn,"href","https://snack.expo.io/@matiasfh/example-translate-animation"),y(cn,"rel","nofollow"),y(On,"class","language-javascript"),y(Un,"class","language-javascript"),y(le,"href","https://reactnative.dev/blog/2017/02/14/using-native-driver-for-animated"),y(le,"rel","nofollow"),y(qe,"class","language-javascript"),y(Me,"id","componentes-animados"),y(_e,"class","language-javascript"),y(ro,"class","language-javascript"),y(ko,"id","easing"),y(Co,"href","https://snack.expo.io/@matiasfh/rn-easing-examples"),y(Co,"rel","nofollow"),y(wo,"class","language-javascript"),y(So,"id","interpolation"),y(cs,"href","https://snack.expo.io/@matiasfh/rn-animation-interpolation-example"),y(cs,"rel","nofollow"),y(fs,"class","language-javascript"),y(Os,"class","language-javascript"),y(Ts,"class","language-javascript"),y(Ys,"id","conclusión")},m(a,s){q(a,n,s),A(n,e),q(a,o,s),q(a,r,s),A(r,c),q(a,d,s),q(a,P,s),A(P,D),q(a,O,s),i(z,a,s),q(a,R,s),q(a,x,s),A(x,w),q(a,L,s),q(a,V,s),A(V,T),A(V,I),A(I,$),A(V,N),A(V,H),A(H,S),A(V,M),q(a,U,s),q(a,X,s),A(X,F),A(X,G),A(G,Y),A(X,B),q(a,K,s),q(a,J,s),A(J,Q),A(J,W),A(W,Z),A(J,_),A(J,aa),A(aa,na),A(J,ea),A(J,oa),A(oa,sa),A(J,ta),A(J,ia),A(ia,ra),A(J,ca),A(J,pa),A(pa,la),A(J,ua),A(J,da),A(da,ma),A(J,fa),A(J,va),A(va,ka),q(a,Ea,s),q(a,ha,s),A(ha,ga),A(ha,ba),A(ba,ya),A(ha,qa),A(ha,Aa),A(Aa,ja),A(ha,Pa),A(ha,Ca),A(Ca,Da),A(ha,Oa),A(ha,za),A(za,Ra),A(ha,xa),A(ha,wa),A(wa,La),A(ha,Va),A(ha,Ta),A(Ta,Ia),A(ha,$a),A(ha,Na),A(Na,Ha),A(ha,Sa),q(a,Ma,s),q(a,Ua,s),A(Ua,Xa),q(a,Fa,s),q(a,Ga,s),A(Ga,Ya),q(a,Ba,s),q(a,Ka,s),A(Ka,Ja),A(Ka,Qa),A(Qa,Wa),A(Ka,Za),A(Ka,_a),A(_a,an),A(Ka,nn),q(a,en,s),q(a,on,s),A(on,sn),q(a,tn,s),q(a,rn,s),A(rn,cn),A(cn,pn),q(a,ln,s),q(a,un,s),A(un,dn),A(un,mn),A(mn,fn),A(un,vn),A(un,kn),A(kn,En),A(un,hn),q(a,gn,s),q(a,bn,s),A(bn,yn),A(bn,qn),A(qn,An),A(bn,jn),A(bn,Pn),A(Pn,Cn),q(a,Dn,s),q(a,On,s),On.innerHTML='<code class="language-javascript"><span class="token keyword">const</span> translateAnimationTiming <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Animated<span class="token punctuation">.</span>Value</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>current</code>',q(a,zn,s),q(a,Rn,s),A(Rn,xn),A(Rn,wn),A(wn,Ln),A(Rn,Vn),A(Rn,Tn),A(Tn,In),A(Rn,$n),A(Rn,Nn),A(Nn,Hn),A(Rn,Sn),q(a,Mn,s),q(a,Un,s),Un.innerHTML='<code class="language-javascript">    <span class="token keyword">const</span> <span class="token function-variable function">timingAnimation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n        Animated<span class="token punctuation">.</span><span class="token function">timing</span><span class="token punctuation">(</span>translateAnimationTiming<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>\n          toValue<span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span>\n          duration<span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>\n          useNativeDriver<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">&#125;</span></code>',q(a,Xn,s),q(a,Fn,s),A(Fn,Gn),A(Fn,Yn),A(Yn,Bn),A(Fn,Kn),A(Fn,Jn),A(Jn,Qn),A(Fn,Wn),A(Fn,Zn),A(Zn,_n),A(Fn,ae),A(Fn,ne),A(ne,ee),A(Fn,oe),A(Fn,se),A(se,te),A(Fn,ie),q(a,re,s),q(a,ce,s),A(ce,pe),A(ce,le),A(le,ue),A(ce,de),A(ce,me),A(me,fe),A(ce,ve),q(a,ke,s),q(a,Ee,s),A(Ee,he),A(Ee,ge),A(ge,be),q(a,ye,s),q(a,qe,s),qe.innerHTML='<code class="language-javascript">    <span class="token keyword">const</span> <span class="token function-variable function">timingAnimation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n        Animated<span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span>translateAnimationTiming<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>\n          toValue<span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span>\n          useNativeDriver<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">&#125;</span></code>',q(a,Ae,s),q(a,je,s),A(je,Pe),q(a,Ce,s),q(a,De,s),A(De,Oe),A(De,ze),A(ze,Re),A(De,xe),A(De,we),A(we,Le),A(De,Ve),A(De,Te),A(Te,Ie),A(De,$e),A(De,Ne),A(Ne,He),q(a,Se,s),q(a,Me,s),A(Me,Ue),q(a,Xe,s),q(a,Fe,s),A(Fe,Ge),A(Fe,Ye),A(Ye,Be),A(Fe,Ke),A(Fe,Je),A(Je,Qe),A(Fe,We),q(a,Ze,s),q(a,_e,s),_e.innerHTML='<code class="language-javascript">    <span class="token operator">&lt;</span>Animated<span class="token punctuation">.</span>View\n        style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span>\n        styles<span class="token punctuation">.</span>circle<span class="token punctuation">,</span>\n        animatedStyleTiming<span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">&#125;</span>\n    <span class="token operator">/</span><span class="token operator">></span></code>',q(a,ao,s),q(a,no,s),A(no,eo),A(no,oo),A(oo,so),A(no,to),q(a,io,s),q(a,ro,s),ro.innerHTML='<code class="language-javascript">    <span class="token keyword">const</span> animatedStyleTiming <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n        transform<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> translateX<span class="token operator">:</span> translateAnimationTiming<span class="token punctuation">&#125;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">&#125;</span></code>',q(a,co,s),q(a,po,s),A(po,lo),A(po,uo),A(uo,mo),A(po,fo),q(a,vo,s),q(a,ko,s),A(ko,Eo),q(a,ho,s),q(a,go,s),A(go,bo),A(go,yo),A(yo,qo),A(go,Ao),q(a,jo,s),q(a,Po,s),A(Po,Co),A(Co,Do),q(a,Oo,s),q(a,zo,s),A(zo,Ro),q(a,xo,s),q(a,wo,s),wo.innerHTML='<code class="language-javascript">    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Easing <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">\'react-native\'</span><span class="token punctuation">;</span>\n    <span class="token operator">...</span>\n    <span class="token operator">...</span>\n    Animated<span class="token punctuation">.</span><span class="token function">timing</span><span class="token punctuation">(</span>animatedValue<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>\n      <span class="token operator">...</span>\n      easing<span class="token operator">:</span> Easing<span class="token punctuation">.</span>ease\n    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>',q(a,Lo,s),q(a,Vo,s),A(Vo,To),A(Vo,Io),A(Io,$o),A(Vo,No),q(a,Ho,s),q(a,So,s),A(So,Mo),q(a,Uo,s),q(a,Xo,s),A(Xo,Fo),A(Xo,Go),A(Go,Yo),A(Xo,Bo),A(Xo,Ko),A(Ko,Jo),A(Xo,Qo),q(a,Wo,s),q(a,Zo,s),A(Zo,_o),A(Zo,as),A(as,ns),A(Zo,es),A(Zo,os),A(os,ss),A(Zo,ts),q(a,is,s),q(a,rs,s),A(rs,cs),A(cs,ps),q(a,ls,s),q(a,us,s),A(us,ds),q(a,ms,s),q(a,fs,s),fs.innerHTML='<code class="language-javascript">    <span class="token keyword">const</span> animatedValue <span class="token operator">=</span> react<span class="token punctuation">.</span><span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Animated<span class="token punctuation">.</span>Value</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>current</code>',q(a,vs,s),q(a,ks,s),A(ks,Es),A(ks,hs),A(hs,gs),A(ks,bs),A(ks,ys),A(ys,qs),A(ks,As),A(ks,js),A(js,Ps),A(ks,Cs),q(a,Ds,s),q(a,Os,s),Os.innerHTML='<code class="language-javascript">    <span class="token keyword">const</span> translateInterpolation <span class="token operator">=</span> animatedValue<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>\n      inputRange<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      outputRange<span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">250</span><span class="token punctuation">]</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> opacityInterpolation <span class="token operator">=</span> animatedValue<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>\n      inputRange<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      outputRange<span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>',q(a,zs,s),q(a,Rs,s),A(Rs,xs),A(Rs,ws),A(ws,Ls),q(a,Vs,s),q(a,Ts,s),Ts.innerHTML='<code class="language-javascript">    <span class="token keyword">const</span> <span class="token function-variable function">animation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n        animatedValue<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n        Animated<span class="token punctuation">.</span><span class="token function">timing</span><span class="token punctuation">(</span>animatedValue<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>\n            toValue<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            duration<span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>\n            useNativeDriver<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n     <span class="token punctuation">&#125;</span></code>',q(a,Is,s),q(a,$s,s),A($s,Ns),A($s,Hs),A(Hs,Ss),A($s,Ms),A($s,Us),A(Us,Xs),A($s,Fs),q(a,Gs,s),q(a,Ys,s),A(Ys,Bs),q(a,Ks,s),q(a,Js,s),A(Js,Qs),A(Js,Ws),A(Ws,Zs),A(Js,_s),A(Js,at),A(at,nt),A(Js,et),A(Js,ot),A(ot,st),A(Js,tt),A(Js,it),A(it,rt),A(Js,ct),pt=!0},p:j,i(a){pt||(p(z.$$.fragment,a),pt=!0)},o(a){l(z.$$.fragment,a),pt=!1},d(a){a&&g(n),a&&g(o),a&&g(r),a&&g(d),a&&g(P),a&&g(O),u(z,a),a&&g(R),a&&g(x),a&&g(L),a&&g(V),a&&g(U),a&&g(X),a&&g(K),a&&g(J),a&&g(Ea),a&&g(ha),a&&g(Ma),a&&g(Ua),a&&g(Fa),a&&g(Ga),a&&g(Ba),a&&g(Ka),a&&g(en),a&&g(on),a&&g(tn),a&&g(rn),a&&g(ln),a&&g(un),a&&g(gn),a&&g(bn),a&&g(Dn),a&&g(On),a&&g(zn),a&&g(Rn),a&&g(Mn),a&&g(Un),a&&g(Xn),a&&g(Fn),a&&g(re),a&&g(ce),a&&g(ke),a&&g(Ee),a&&g(ye),a&&g(qe),a&&g(Ae),a&&g(je),a&&g(Ce),a&&g(De),a&&g(Se),a&&g(Me),a&&g(Xe),a&&g(Fe),a&&g(Ze),a&&g(_e),a&&g(ao),a&&g(no),a&&g(io),a&&g(ro),a&&g(co),a&&g(po),a&&g(vo),a&&g(ko),a&&g(ho),a&&g(go),a&&g(jo),a&&g(Po),a&&g(Oo),a&&g(zo),a&&g(xo),a&&g(wo),a&&g(Lo),a&&g(Vo),a&&g(Ho),a&&g(So),a&&g(Uo),a&&g(Xo),a&&g(Wo),a&&g(Zo),a&&g(is),a&&g(rs),a&&g(ls),a&&g(us),a&&g(ms),a&&g(fs),a&&g(vs),a&&g(ks),a&&g(Ds),a&&g(Os),a&&g(zs),a&&g(Rs),a&&g(Vs),a&&g(Ts),a&&g(Is),a&&g($s),a&&g(Gs),a&&g(Ys),a&&g(Ks),a&&g(Js)}}}function O(a){let n,e;const d=[a[0]];let m={$$slots:{default:[D]},$$scope:{ctx:a}};for(let s=0;s<d.length;s+=1)m=o(m,d[s]);return n=new P({props:m}),{c(){s(n.$$.fragment)},l(a){t(n.$$.fragment,a)},m(a,o){i(n,a,o),e=!0},p(a,[e]){const o=1&e?r(d,[c(a[0])]):{};2&e&&(o.$$scope={dirty:e,ctx:a}),n.$set(o)},i(a){e||(p(n.$$.fragment,a),e=!0)},o(a){l(n.$$.fragment,a),e=!1},d(a){u(n,a)}}}function z(a,n,e){return a.$$set=a=>{e(0,n=o(o({},n),d(a)))},[n=d(n)]}class R extends a{constructor(a){super(),n(this,a,z,O,e,{})}}export{R as default};
