import{S as a,i as n,s,B as e,j as t,m as o,o as p,p as c,q as l,x as i,u,v as r,N as k,e as d,t as m,k as v,c as g,a as f,g as h,d as y,n as E,b,F as w,f as q,G as M,K as R}from"../../../chunks/vendor-64eebebd.js";import{P}from"../../../chunks/PostLayout-1d1b8b8e.js";function A(a){let n,s,e,t,o,p,c,l,i,u,r,k,P,A,C,N,j,L,S,x,z,D,J,O,K,$,_,H,I,F,T,B,G,U,V,W,Q,Y,Z,X,aa,na,sa,ea,ta,oa,pa,ca,la,ia,ua,ra,ka,da,ma,va,ga,fa,ha,ya,Ea,ba,wa,qa,Ma,Ra,Pa,Aa,Ca,Na,ja,La,Sa,xa,za,Da,Ja,Oa,Ka,$a,_a,Ha,Ia,Fa,Ta,Ba,Ga,Ua,Va,Wa,Qa,Ya,Za,Xa,an,nn,sn,en,tn,on,pn,cn,ln,un,rn,kn,dn,mn,vn,gn,fn,hn,yn,En,bn,wn,qn,Mn,Rn,Pn,An,Cn,Nn,jn,Ln,Sn,xn;return{c(){n=d("p"),s=m("React Native te permite crear aplicaciones para todo tipo dispositivos móviles utilizando Javascript, esto permite una gran flexibilidad y disminuye la curva de aprendizaje."),e=v(),t=d("p"),o=m("React Native permite acceso a diferentes API nativas para los distintos sistemas operativos (Android, iOS), pero en ciertas ocasiones esto no es suficiente y es necesario desarrollar soluciones en código nativo: Java/Kotlin o Object-C/Swift."),p=v(),c=d("h1"),l=m("Módulos nativos"),i=v(),u=d("p"),r=m("React Native permite que el uso de código nativo para utilizar el potencial de cada plataforma, es una característica avanzada y que requiere algunos conocimientos más allá de Javascript y React, pero si la plataforma no te ofrece alguna característica que requieres, es posible crearla."),k=v(),P=d("h2"),A=m("Android"),C=v(),N=d("p"),j=m("En el caso de Android, el código nativo puede venir distribuido como una paquete jar o aar o creado manualmente como un módulo dentro de tu aplicación."),L=v(),S=d("p"),x=m("Quizás necesitas utilizar un SDK o librería externa, en el caso de paquetes "),z=d("em"),D=m("jar"),J=m(" o "),O=d("em"),K=m("aar"),$=m(" puedes agregarlos utilizando "),_=d("a"),H=m("Android Studio"),I=m("."),F=v(),T=d("ol"),B=d("li"),G=m("Abre tu proyecto en Android Studio, abre sólo el directorio "),U=d("strong"),V=m("android"),W=m("."),Q=v(),Y=d("li"),Z=m("Haz click en "),X=d("code"),aa=m("File > New Module"),na=v(),sa=d("li"),ea=m("Una ventana flotante se mostrará en donde puedes elegir el tipo de módulo que quieres importar, en este caso "),ta=d("em"),oa=m(".JAR/"),pa=m(".AAR. Luego presiona siguiente"),ca=v(),la=d("p"),ia=d("img"),ra=v(),ka=d("ol"),da=d("li"),ma=m("Ahora abre el archivo "),va=d("code"),ga=m("build.gradle"),fa=m(" de tu app y agrega una nueva linea al bloque de dependencias:"),ha=v(),ya=d("pre"),Ea=v(),ba=d("ol"),wa=d("li"),qa=m("Haz click en "),Ma=d("em"),Ra=m("Sync Project With Gradle Files"),Pa=m("."),Aa=v(),Ca=d("p"),Na=m("Es posible que tu nuevo módulo ya implemente lo necesarioa para hacer su API disponible en tu proyecto React Native, en caso de no ser así tendras que hacerlo manualmente"),ja=v(),La=d("p"),Sa=m("Lo primero es crear un nuevo módulo deentro del proyecto, lo llamaremos `SDKModule`"),xa=v(),za=d("p"),Da=m("Este nuevo módulo implementa una clase que implementa "),Ja=d("code"),Oa=m("ReactContextBaseJavaModule"),Ka=v(),$a=d("pre"),_a=v(),Ha=d("p"),Ia=m("Esta clase debe implementar el método "),Fa=d("code"),Ta=m("getName"),Ba=m(". Luego tendrás que agregar los métodos que quieres exponer para su uso en Javascript. Estos métodos deben ser deecorados con la etiqueta "),Ga=d("code"),Ua=m("@ReactMethod"),Va=v(),Wa=d("p"),Qa=m("En este ejemplo el método "),Ya=d("code"),Za=m("getDeviceName"),Xa=m(" podrá ser utilizando desde tu código Javascript."),an=v(),nn=d("p"),sn=m("Pero falta un paso más. Es necesario crear un "),en=d("code"),tn=m("package"),on=m(" con el nuevo módulo. Esta nueva clase permitirá el registro del módulo. Para esto bastará con crear un nuevo archivo llamado "),pn=d("code"),cn=m("SDKPackage"),ln=v(),un=d("pre"),rn=v(),kn=d("p"),dn=m("Finalmente debemos registrar el paquete en la clase principal "),mn=d("code"),vn=m("MainApplication.java"),gn=v(),fn=d("pre"),hn=v(),yn=d("p"),En=m("Listo, ahora tu nuevo módulo estará disponible dentro del objeto "),bn=d("code"),wn=m("NativeModules"),qn=m(" en tu app React Native, bajo el nombre que definiste en el método "),Mn=d("code"),Rn=m("getName"),Pn=v(),An=d("pre"),Cn=v(),Nn=d("h1"),jn=m("Conclusión"),Ln=v(),Sn=d("p"),xn=m("React Native es una plataforma que permite el desarrollo rápido y seguro de aplicaciones móviles, pero no tiene soporte (aún) para cada una de las caracterísitcas de los dispositivos o a veces el soporte ofrecido por defecto no es suficiente, en estos casos querrás crear un módulo nativo, que no más que código Java - en el caso de Android -  que te permite definir como utilizar cierta característica. Este código puede ser expuesto a tu aplicación Javascript tal como se describe en el ejemplo."),this.h()},l(a){n=g(a,"P",{});var d=f(n);s=h(d,"React Native te permite crear aplicaciones para todo tipo dispositivos móviles utilizando Javascript, esto permite una gran flexibilidad y disminuye la curva de aprendizaje."),d.forEach(y),e=E(a),t=g(a,"P",{});var m=f(t);o=h(m,"React Native permite acceso a diferentes API nativas para los distintos sistemas operativos (Android, iOS), pero en ciertas ocasiones esto no es suficiente y es necesario desarrollar soluciones en código nativo: Java/Kotlin o Object-C/Swift."),m.forEach(y),p=E(a),c=g(a,"H1",{id:!0});var v=f(c);l=h(v,"Módulos nativos"),v.forEach(y),i=E(a),u=g(a,"P",{});var b=f(u);r=h(b,"React Native permite que el uso de código nativo para utilizar el potencial de cada plataforma, es una característica avanzada y que requiere algunos conocimientos más allá de Javascript y React, pero si la plataforma no te ofrece alguna característica que requieres, es posible crearla."),b.forEach(y),k=E(a),P=g(a,"H2",{id:!0});var w=f(P);A=h(w,"Android"),w.forEach(y),C=E(a),N=g(a,"P",{});var q=f(N);j=h(q,"En el caso de Android, el código nativo puede venir distribuido como una paquete jar o aar o creado manualmente como un módulo dentro de tu aplicación."),q.forEach(y),L=E(a),S=g(a,"P",{});var M=f(S);x=h(M,"Quizás necesitas utilizar un SDK o librería externa, en el caso de paquetes "),z=g(M,"EM",{});var R=f(z);D=h(R,"jar"),R.forEach(y),J=h(M," o "),O=g(M,"EM",{});var ua=f(O);K=h(ua,"aar"),ua.forEach(y),$=h(M," puedes agregarlos utilizando "),_=g(M,"A",{href:!0,rel:!0});var zn=f(_);H=h(zn,"Android Studio"),zn.forEach(y),I=h(M,"."),M.forEach(y),F=E(a),T=g(a,"OL",{});var Dn=f(T);B=g(Dn,"LI",{});var Jn=f(B);G=h(Jn,"Abre tu proyecto en Android Studio, abre sólo el directorio "),U=g(Jn,"STRONG",{});var On=f(U);V=h(On,"android"),On.forEach(y),W=h(Jn,"."),Jn.forEach(y),Q=E(Dn),Y=g(Dn,"LI",{});var Kn=f(Y);Z=h(Kn,"Haz click en "),X=g(Kn,"CODE",{});var $n=f(X);aa=h($n,"File > New Module"),$n.forEach(y),Kn.forEach(y),na=E(Dn),sa=g(Dn,"LI",{});var _n=f(sa);ea=h(_n,"Una ventana flotante se mostrará en donde puedes elegir el tipo de módulo que quieres importar, en este caso "),ta=g(_n,"EM",{});var Hn=f(ta);oa=h(Hn,".JAR/"),Hn.forEach(y),pa=h(_n,".AAR. Luego presiona siguiente"),_n.forEach(y),Dn.forEach(y),ca=E(a),la=g(a,"P",{});var In=f(la);ia=g(In,"IMG",{src:!0,alt:!0}),In.forEach(y),ra=E(a),ka=g(a,"OL",{});var Fn=f(ka);da=g(Fn,"LI",{});var Tn=f(da);ma=h(Tn,"Ahora abre el archivo "),va=g(Tn,"CODE",{});var Bn=f(va);ga=h(Bn,"build.gradle"),Bn.forEach(y),fa=h(Tn," de tu app y agrega una nueva linea al bloque de dependencias:"),Tn.forEach(y),Fn.forEach(y),ha=E(a),ya=g(a,"PRE",{class:!0}),f(ya).forEach(y),Ea=E(a),ba=g(a,"OL",{});var Gn=f(ba);wa=g(Gn,"LI",{});var Un=f(wa);qa=h(Un,"Haz click en "),Ma=g(Un,"EM",{});var Vn=f(Ma);Ra=h(Vn,"Sync Project With Gradle Files"),Vn.forEach(y),Pa=h(Un,"."),Un.forEach(y),Gn.forEach(y),Aa=E(a),Ca=g(a,"P",{});var Wn=f(Ca);Na=h(Wn,"Es posible que tu nuevo módulo ya implemente lo necesarioa para hacer su API disponible en tu proyecto React Native, en caso de no ser así tendras que hacerlo manualmente"),Wn.forEach(y),ja=E(a),La=g(a,"P",{});var Qn=f(La);Sa=h(Qn,"Lo primero es crear un nuevo módulo deentro del proyecto, lo llamaremos `SDKModule`"),Qn.forEach(y),xa=E(a),za=g(a,"P",{});var Yn=f(za);Da=h(Yn,"Este nuevo módulo implementa una clase que implementa "),Ja=g(Yn,"CODE",{});var Zn=f(Ja);Oa=h(Zn,"ReactContextBaseJavaModule"),Zn.forEach(y),Yn.forEach(y),Ka=E(a),$a=g(a,"PRE",{class:!0}),f($a).forEach(y),_a=E(a),Ha=g(a,"P",{});var Xn=f(Ha);Ia=h(Xn,"Esta clase debe implementar el método "),Fa=g(Xn,"CODE",{});var as=f(Fa);Ta=h(as,"getName"),as.forEach(y),Ba=h(Xn,". Luego tendrás que agregar los métodos que quieres exponer para su uso en Javascript. Estos métodos deben ser deecorados con la etiqueta "),Ga=g(Xn,"CODE",{});var ns=f(Ga);Ua=h(ns,"@ReactMethod"),ns.forEach(y),Xn.forEach(y),Va=E(a),Wa=g(a,"P",{});var ss=f(Wa);Qa=h(ss,"En este ejemplo el método "),Ya=g(ss,"CODE",{});var es=f(Ya);Za=h(es,"getDeviceName"),es.forEach(y),Xa=h(ss," podrá ser utilizando desde tu código Javascript."),ss.forEach(y),an=E(a),nn=g(a,"P",{});var ts=f(nn);sn=h(ts,"Pero falta un paso más. Es necesario crear un "),en=g(ts,"CODE",{});var os=f(en);tn=h(os,"package"),os.forEach(y),on=h(ts," con el nuevo módulo. Esta nueva clase permitirá el registro del módulo. Para esto bastará con crear un nuevo archivo llamado "),pn=g(ts,"CODE",{});var ps=f(pn);cn=h(ps,"SDKPackage"),ps.forEach(y),ts.forEach(y),ln=E(a),un=g(a,"PRE",{class:!0}),f(un).forEach(y),rn=E(a),kn=g(a,"P",{});var cs=f(kn);dn=h(cs,"Finalmente debemos registrar el paquete en la clase principal "),mn=g(cs,"CODE",{});var ls=f(mn);vn=h(ls,"MainApplication.java"),ls.forEach(y),cs.forEach(y),gn=E(a),fn=g(a,"PRE",{class:!0}),f(fn).forEach(y),hn=E(a),yn=g(a,"P",{});var is=f(yn);En=h(is,"Listo, ahora tu nuevo módulo estará disponible dentro del objeto "),bn=g(is,"CODE",{});var us=f(bn);wn=h(us,"NativeModules"),us.forEach(y),qn=h(is," en tu app React Native, bajo el nombre que definiste en el método "),Mn=g(is,"CODE",{});var rs=f(Mn);Rn=h(rs,"getName"),rs.forEach(y),is.forEach(y),Pn=E(a),An=g(a,"PRE",{class:!0}),f(An).forEach(y),Cn=E(a),Nn=g(a,"H1",{id:!0});var ks=f(Nn);jn=h(ks,"Conclusión"),ks.forEach(y),Ln=E(a),Sn=g(a,"P",{});var ds=f(Sn);xn=h(ds,"React Native es una plataforma que permite el desarrollo rápido y seguro de aplicaciones móviles, pero no tiene soporte (aún) para cada una de las caracterísitcas de los dispositivos o a veces el soporte ofrecido por defecto no es suficiente, en estos casos querrás crear un módulo nativo, que no más que código Java - en el caso de Android -  que te permite definir como utilizar cierta característica. Este código puede ser expuesto a tu aplicación Javascript tal como se describe en el ejemplo."),ds.forEach(y),this.h()},h(){b(c,"id","módulos-nativos"),b(P,"id","android"),b(_,"href","https://developer.android.com/studio"),b(_,"rel","nofollow"),w(ia.src,ua="https://res.cloudinary.com/matiasfha/image/upload/c_scale,w_auto:100,dpr_auto/v1602963871/import-aar_aehans.png")||b(ia,"src","https://res.cloudinary.com/matiasfha/image/upload/c_scale,w_auto:100,dpr_auto/v1602963871/import-aar_aehans.png"),b(ia,"alt","import aar"),b(ya,"class","language-undefined"),b($a,"class","language-java"),b(un,"class","language-java"),b(fn,"class","language-java"),b(An,"class","language-java"),b(Nn,"id","conclusión")},m(a,d){q(a,n,d),M(n,s),q(a,e,d),q(a,t,d),M(t,o),q(a,p,d),q(a,c,d),M(c,l),q(a,i,d),q(a,u,d),M(u,r),q(a,k,d),q(a,P,d),M(P,A),q(a,C,d),q(a,N,d),M(N,j),q(a,L,d),q(a,S,d),M(S,x),M(S,z),M(z,D),M(S,J),M(S,O),M(O,K),M(S,$),M(S,_),M(_,H),M(S,I),q(a,F,d),q(a,T,d),M(T,B),M(B,G),M(B,U),M(U,V),M(B,W),M(T,Q),M(T,Y),M(Y,Z),M(Y,X),M(X,aa),M(T,na),M(T,sa),M(sa,ea),M(sa,ta),M(ta,oa),M(sa,pa),q(a,ca,d),q(a,la,d),M(la,ia),q(a,ra,d),q(a,ka,d),M(ka,da),M(da,ma),M(da,va),M(va,ga),M(da,fa),q(a,ha,d),q(a,ya,d),ya.innerHTML='<code class="language-undefined">    dependencies &#123; compile project(&quot;:my-library-module&quot;) &#125;</code>',q(a,Ea,d),q(a,ba,d),M(ba,wa),M(wa,qa),M(wa,Ma),M(Ma,Ra),M(wa,Pa),q(a,Aa,d),q(a,Ca,d),M(Ca,Na),q(a,ja,d),q(a,La,d),M(La,Sa),q(a,xa,d),q(a,za,d),M(za,Da),M(za,Ja),M(Ja,Oa),q(a,Ka,d),q(a,$a,d),$a.innerHTML='<code class="language-java">    <span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>myapp<span class="token punctuation">.</span>sdk</span><span class="token punctuation">;</span>\n    \n    <span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>facebook<span class="token punctuation">.</span>react<span class="token punctuation">.</span>bridge<span class="token punctuation">.</span></span><span class="token class-name">Callback</span><span class="token punctuation">;</span>\n    <span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>facebook<span class="token punctuation">.</span>react<span class="token punctuation">.</span>bridge<span class="token punctuation">.</span></span><span class="token class-name">ReactApplicationContext</span><span class="token punctuation">;</span>\n    <span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>facebook<span class="token punctuation">.</span>react<span class="token punctuation">.</span>bridge<span class="token punctuation">.</span></span><span class="token class-name">ReactContextBaseJavaModule</span><span class="token punctuation">;</span>\n    <span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>facebook<span class="token punctuation">.</span>react<span class="token punctuation">.</span>bridge<span class="token punctuation">.</span></span><span class="token class-name">ReactMethod</span><span class="token punctuation">;</span>\n    \n    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SDKModule</span> <span class="token keyword">extends</span> <span class="token class-name">ReactContextBaseJavaModule</span> <span class="token punctuation">&#123;</span>\n       <span class="token comment">//constructor</span>\n       <span class="token keyword">public</span> <span class="token class-name">SDKModule</span><span class="token punctuation">(</span><span class="token class-name">ReactApplicationContext</span> reactContext<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n           <span class="token keyword">super</span><span class="token punctuation">(</span>reactContext<span class="token punctuation">)</span><span class="token punctuation">;</span>\n       <span class="token punctuation">&#125;</span>\n       <span class="token annotation punctuation">@Override</span>\n       <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n           <span class="token keyword">return</span> <span class="token string">"SDK"</span><span class="token punctuation">;</span>\n       <span class="token punctuation">&#125;</span>\n       <span class="token comment">//Custom function that we are going to export to JS</span>\n       <span class="token annotation punctuation">@ReactMethod</span>\n       <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getDeviceName</span><span class="token punctuation">(</span><span class="token class-name">Callback</span> cb<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n           <span class="token keyword">try</span><span class="token punctuation">&#123;</span>\n               cb<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span>Build</span><span class="token punctuation">.</span>MODEL<span class="token punctuation">)</span><span class="token punctuation">;</span>\n           <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>\n               cb<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n           <span class="token punctuation">&#125;</span>\n       <span class="token punctuation">&#125;</span>\n    <span class="token punctuation">&#125;</span></code>',q(a,_a,d),q(a,Ha,d),M(Ha,Ia),M(Ha,Fa),M(Fa,Ta),M(Ha,Ba),M(Ha,Ga),M(Ga,Ua),q(a,Va,d),q(a,Wa,d),M(Wa,Qa),M(Wa,Ya),M(Ya,Za),M(Wa,Xa),q(a,an,d),q(a,nn,d),M(nn,sn),M(nn,en),M(en,tn),M(nn,on),M(nn,pn),M(pn,cn),q(a,ln,d),q(a,un,d),un.innerHTML='<code class="language-java">    <span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>myapp<span class="token punctuation">.</span>sdk</span><span class="token punctuation">;</span>\n    \n    <span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>facebook<span class="token punctuation">.</span>react<span class="token punctuation">.</span></span><span class="token class-name">ReactPackage</span><span class="token punctuation">;</span>\n    <span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>facebook<span class="token punctuation">.</span>react<span class="token punctuation">.</span>bridge<span class="token punctuation">.</span></span><span class="token class-name">JavaScriptModule</span><span class="token punctuation">;</span>\n    <span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>facebook<span class="token punctuation">.</span>react<span class="token punctuation">.</span>bridge<span class="token punctuation">.</span></span><span class="token class-name">NativeModule</span><span class="token punctuation">;</span>\n    <span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>facebook<span class="token punctuation">.</span>react<span class="token punctuation">.</span>bridge<span class="token punctuation">.</span></span><span class="token class-name">ReactApplicationContext</span><span class="token punctuation">;</span>\n    <span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>facebook<span class="token punctuation">.</span>react<span class="token punctuation">.</span>uimanager<span class="token punctuation">.</span></span><span class="token class-name">ViewManager</span><span class="token punctuation">;</span>\n    <span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span>\n    <span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span><span class="token punctuation">;</span>\n    <span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span>\n    \n    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SDKPackge</span> <span class="token keyword">implements</span> <span class="token class-name">ReactPackage</span> <span class="token punctuation">&#123;</span>\n    \n       <span class="token annotation punctuation">@Override</span>\n       <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ViewManager</span><span class="token punctuation">></span></span> <span class="token function">createViewManagers</span><span class="token punctuation">(</span><span class="token class-name">ReactApplicationContext</span> reactContext<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n           <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n       <span class="token punctuation">&#125;</span>\n    \n       <span class="token annotation punctuation">@Override</span>\n       <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NativeModule</span><span class="token punctuation">></span></span> <span class="token function">createNativeModules</span><span class="token punctuation">(</span>\n               <span class="token class-name">ReactApplicationContext</span> reactContext<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n           <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NativeModule</span><span class="token punctuation">></span></span> modules <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n           <span class="token comment">//We import the module file here</span>\n           modules<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SDKModule</span><span class="token punctuation">(</span>reactContext<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n           <span class="token keyword">return</span> modules<span class="token punctuation">;</span>\n       <span class="token punctuation">&#125;</span>\n    \n       <span class="token comment">// Backward compatibility</span>\n       <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">JavaScriptModule</span><span class="token punctuation">></span><span class="token punctuation">></span></span> <span class="token function">createJSModules</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n           <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n       <span class="token punctuation">&#125;</span>\n    <span class="token punctuation">&#125;</span></code>',q(a,rn,d),q(a,kn,d),M(kn,dn),M(kn,mn),M(mn,vn),q(a,gn,d),q(a,fn,d),fn.innerHTML='<code class="language-java">       <span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>notetaker<span class="token punctuation">.</span>sdk<span class="token punctuation">.</span></span><span class="token class-name">SDKPackage</span><span class="token punctuation">;</span>\n    \n      <span class="token annotation punctuation">@Override</span>\n      <span class="token keyword">protected</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ReactPackage</span><span class="token punctuation">></span></span> <span class="token function">getPackages</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">return</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ReactPackage</span><span class="token punctuation">></span></span><span class="token function">asList</span><span class="token punctuation">(</span>\n            <span class="token keyword">new</span> <span class="token class-name">MainReactPackage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token keyword">new</span> <span class="token class-name">SDKPackage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//Add your package here</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>',q(a,hn,d),q(a,yn,d),M(yn,En),M(yn,bn),M(bn,wn),M(yn,qn),M(yn,Mn),M(Mn,Rn),q(a,Pn,d),q(a,An,d),An.innerHTML='<code class="language-java">    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span><span class="token class-name">NativeModules</span><span class="token punctuation">&#125;</span> from <span class="token string">\'react-native\'</span><span class="token punctuation">;</span>\n    <span class="token class-name">NativeModules</span><span class="token punctuation">.</span>SDK<span class="token punctuation">.</span><span class="token function">getDeviceName</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err <span class="token punctuation">,</span>name<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>\n       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>',q(a,Cn,d),q(a,Nn,d),M(Nn,jn),q(a,Ln,d),q(a,Sn,d),M(Sn,xn)},p:R,d(a){a&&y(n),a&&y(e),a&&y(t),a&&y(p),a&&y(c),a&&y(i),a&&y(u),a&&y(k),a&&y(P),a&&y(C),a&&y(N),a&&y(L),a&&y(S),a&&y(F),a&&y(T),a&&y(ca),a&&y(la),a&&y(ra),a&&y(ka),a&&y(ha),a&&y(ya),a&&y(Ea),a&&y(ba),a&&y(Aa),a&&y(Ca),a&&y(ja),a&&y(La),a&&y(xa),a&&y(za),a&&y(Ka),a&&y($a),a&&y(_a),a&&y(Ha),a&&y(Va),a&&y(Wa),a&&y(an),a&&y(nn),a&&y(ln),a&&y(un),a&&y(rn),a&&y(kn),a&&y(gn),a&&y(fn),a&&y(hn),a&&y(yn),a&&y(Pn),a&&y(An),a&&y(Cn),a&&y(Nn),a&&y(Ln),a&&y(Sn)}}}function C(a){let n,s;const k=[a[0],N];let d={$$slots:{default:[A]},$$scope:{ctx:a}};for(let t=0;t<k.length;t+=1)d=e(d,k[t]);return n=new P({props:d}),{c(){t(n.$$.fragment)},l(a){o(n.$$.fragment,a)},m(a,e){p(n,a,e),s=!0},p(a,[s]){const e=1&s?c(k,[1&s&&l(a[0]),0&s&&l(N)]):{};2&s&&(e.$$scope={dirty:s,ctx:a}),n.$set(e)},i(a){s||(i(n.$$.fragment,a),s=!0)},o(a){u(n.$$.fragment,a),s=!1},d(a){r(n,a)}}}const N={date:"2020-10-17T19:40:05.000Z",banner:"https://res.cloudinary.com/matiasfha/image/upload/v1602963950/lukasz-szmigiel-jFCViYFYcus-unsplash_mffzif.jpg",keywords:["React Native","Javascript","React","Android","Native Module"],tag:"Seed",title:"Agregar Módulos Nativos a Una Aplicación React Native",description:"React Native permite que el uso de código nativo para utilizar el potencial de cada plataforma, es una característica avanzada y que requiere algunos conocimientos más allá de Javascript y React, pero si la plataforma no te ofrece alguna característica que requieres, es posible crearla.",bannerCredit:'<span>Photo by <a href="https://unsplash.com/@szmigieldesign?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Lukasz Szmigiel</a> on <a href="https://unsplash.com/s/photos/nature?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></span>'};function j(a,n,s){return a.$$set=a=>{s(0,n=e(e({},n),k(a)))},[n=k(n)]}class L extends a{constructor(a){super(),n(this,a,j,C,s,{})}}export{L as default,N as metadata};
