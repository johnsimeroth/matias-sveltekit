import{S as e,i as t,s as r,B as a,j as o,m as n,o as i,p as s,q as h,x as c,u as m,v as d,N as p,k as l,e as f,t as u,n as g,c as E,a as v,g as w,d as T,b,f as y,G as P}from"../../../chunks/vendor-64eebebd.js";import{P as C}from"../../../chunks/PostLayout-1d1b8b8e.js";import{Q as k}from"../../../chunks/Quote-982ae035.js";function $(e){let t,r,a,o,n;return{c(){t=f("p"),r=u("This is an old post written in my medium site."),a=l(),o=f("p"),n=u("Just published here to keep track of it and not loose it")},l(e){t=E(e,"P",{});var i=v(t);r=w(i,"This is an old post written in my medium site."),i.forEach(T),a=g(e),o=E(e,"P",{});var s=v(o);n=w(s,"Just published here to keep track of it and not loose it"),s.forEach(T)},m(e,i){y(e,t,i),P(t,r),y(e,a,i),y(e,o,i),P(o,n)},d(e){e&&T(t),e&&T(a),e&&T(o)}}}function L(e){let t,r,a,s,h,p,C,L,I,U,O,R,D,_,x,j,z,A,H,M,B,q,N,S,G,Y,F,J,Q,K,V,Z,W,X,ee,te,re,ae,oe,ne,ie,se,he,ce,me,de,pe,le,fe,ue,ge,Ee,ve,we,Te,be,ye,Pe,Ce,ke,$e,Le,Ie,Ue,Oe,Re,De,_e,xe,je,ze,Ae,He,Me,Be,qe,Ne,Se,Ge,Ye,Fe,Je,Qe,Ke,Ve,Ze,We,Xe,et,tt,rt,at,ot,nt,it,st,ht,ct,mt,dt,pt,lt,ft,ut,gt,Et,vt,wt,Tt,bt,yt,Pt,Ct,kt,$t,Lt,It,Ut,Ot,Rt,Dt,_t,xt,jt,zt,At,Ht,Mt,Bt,qt,Nt,St,Gt,Yt,Ft,Jt,Qt,Kt,Vt,Zt,Wt,Xt,er,tr,rr,ar,or,nr,ir,sr,hr,cr,mr,dr,pr,lr,fr,ur,gr,Er,vr,wr,Tr;return t=new k({props:{$$slots:{default:[$]},$$scope:{ctx:e}}}),{c(){o(t.$$.fragment),r=l(),a=f("p"),s=u("There are different ways or approaches that helps you to measure your app performance when working with React. Here we will summarize a two of them:"),h=l(),p=f("ul"),C=f("li"),L=u("Using Chrome Timeline to Profile Components"),I=l(),U=f("li"),O=u("The new "),R=f("code"),D=u("unstable"),_=u(" Profiler component."),x=l(),j=f("h1"),z=u("Using Chrome Timeline to Profile your Components"),A=l(),H=f("p"),M=u("This is the more direct way and less “invasive” method to measure your app performance."),B=l(),q=f("p"),N=u("You can use Chrome Developer Tools to visualize the components in the Chrome Timeline. Using this you can see the components that are mounted, updated and unmounted and the time used in each task."),S=l(),G=f("p"),Y=u("To use this tool just load your app adding a new query string to the url "),F=f("code"),J=u("?react_perf"),Q=u(" once the app is loaded:"),K=l(),V=f("ul"),Z=f("li"),W=u("Open the Timeline tab and press "),X=f("strong"),ee=u("Record"),te=l(),re=f("li"),ae=u("Use your app while Chrome is recording"),oe=l(),ne=f("li"),ie=u("Stop the recording"),se=l(),he=f("p"),ce=u("Now you can analyze the results that were recorded, this data can help you figure out when some piece of the UI get’s updated when it shouldn’t, how much updates happens, etc."),me=l(),de=f("h1"),pe=u("Profile component"),le=l(),fe=f("p"),ue=u("The core React team recently merge a new PR including a new component type: "),ge=f("code"),Ee=u("Profiler"),ve=l(),we=f("p"),Te=u("This component can be used to get the following timing metrics:"),be=l(),ye=f("ul"),Pe=f("li"),Ce=u("User Timing API: Measure the start and stop time for each component lifecycle"),ke=l(),$e=f("li"),Le=u("Render time: The actual time spent rendering the "),Ie=f("code"),Ue=u("Profile"),Oe=u(" and it descendants"),Re=l(),De=f("li"),_e=u("Base render time: The time spent in the most recent `render` for each component under the "),xe=f("code"),je=u("Profiler"),ze=u(" tree."),Ae=l(),He=f("h2"),Me=u("How to use "),Be=f("code"),qe=u("Profiler"),Ne=u(" :"),Se=l(),Ge=f("p"),Ye=u("First: This component is a new experimental API so it’s currently exported as "),Fe=f("code"),Je=u("React.unstable_Profiler"),Qe=u(" and its available in the "),Ke=f("code"),Ve=u("master"),Ze=u(" branch of react. "),We=f("a"),Xe=u("https://github.com/facebook/react/blob/master/packages/react/src/React.js#L57"),et=l(),tt=f("p"),rt=u("Using this component is dead simple:"),at=l(),ot=f("p"),nt=u("This component acts just as a “container” so the "),it=f("code"),st=u("Profiler"),ht=u(" can be declared anywhere in your tree and can be nested."),ct=l(),mt=f("p"),dt=u("The "),pt=f("code"),lt=u("onRender"),ft=u(" callback is called on each `render` of the root with the following arguments:"),ut=l(),gt=f("ul"),Et=f("li"),vt=u("id: An identificator for the "),wt=f("code"),Tt=u("Profiler"),bt=l(),yt=f("li"),Pt=u("phase: Identify in what step the component is: "),Ct=f("code"),kt=u("mount"),$t=u(" or "),Lt=f("code"),It=u("update"),Ut=l(),Ot=f("li"),Rt=u("actualTime: The time spent rendering the "),Dt=f("code"),_t=u("Profiler"),xt=u(" and the descendant tree."),jt=l(),zt=f("li"),At=u("baseTime: The time spent rendering the descendant components of the "),Ht=f("code"),Mt=u("Profiler"),Bt=l(),qt=f("h2"),Nt=u("Metrics"),St=l(),Gt=f("p"),Yt=u("The metrics that can be gathered with this component are (as mentioned above)"),Ft=l(),Jt=f("ul"),Qt=f("li"),Kt=u("User Timing API: Measure the start and stop time for the components lifecycle. This is measured in a realtime graph gathering the times for each component lifecyle in the tree. The realtime graph is recorded after each lifecyle call."),Vt=l(),Zt=f("li"),Wt=u("Actual Render time: The actual time spent rendering the "),Xt=f("code"),er=u("Profile"),tr=u(" and it descendants. This is measured but starting a timer during the "),rr=f("em"),ar=u("begin_phase and finishing it at the _complete"),or=u(" phase. The time is recorded each time "),nr=f("code"),ir=u("Profiler"),sr=u(" is re-rendered. Can be useful to understand how the subtree make use of `shouldComponentUpdate` and to check how the momoization process behave. Less time means better memoization."),hr=l(),cr=f("li"),mr=u("Base render time: The time spent in the most recent `render` for each component under the "),dr=f("code"),pr=u("Profiler"),lr=u(" tree. This is measured for each "),fr=f("code"),ur=u("fiber"),gr=u("under the "),Er=f("code"),vr=u("Profiler"),wr=u(" component. The times are not updated is the components skips the render. This can tell how expensive is the `render` function in the worst scenario."),this.h()},l(e){n(t.$$.fragment,e),r=g(e),a=E(e,"P",{});var o=v(a);s=w(o,"There are different ways or approaches that helps you to measure your app performance when working with React. Here we will summarize a two of them:"),o.forEach(T),h=g(e),p=E(e,"UL",{});var i=v(p);C=E(i,"LI",{});var c=v(C);L=w(c,"Using Chrome Timeline to Profile Components"),c.forEach(T),I=g(i),U=E(i,"LI",{});var m=v(U);O=w(m,"The new "),R=E(m,"CODE",{});var d=v(R);D=w(d,"unstable"),d.forEach(T),_=w(m," Profiler component."),m.forEach(T),i.forEach(T),x=g(e),j=E(e,"H1",{id:!0});var l=v(j);z=w(l,"Using Chrome Timeline to Profile your Components"),l.forEach(T),A=g(e),H=E(e,"P",{});var f=v(H);M=w(f,"This is the more direct way and less “invasive” method to measure your app performance."),f.forEach(T),B=g(e),q=E(e,"P",{});var u=v(q);N=w(u,"You can use Chrome Developer Tools to visualize the components in the Chrome Timeline. Using this you can see the components that are mounted, updated and unmounted and the time used in each task."),u.forEach(T),S=g(e),G=E(e,"P",{});var b=v(G);Y=w(b,"To use this tool just load your app adding a new query string to the url "),F=E(b,"CODE",{});var y=v(F);J=w(y,"?react_perf"),y.forEach(T),Q=w(b," once the app is loaded:"),b.forEach(T),K=g(e),V=E(e,"UL",{});var P=v(V);Z=E(P,"LI",{});var k=v(Z);W=w(k,"Open the Timeline tab and press "),X=E(k,"STRONG",{});var $=v(X);ee=w($,"Record"),$.forEach(T),k.forEach(T),te=g(P),re=E(P,"LI",{});var Tr=v(re);ae=w(Tr,"Use your app while Chrome is recording"),Tr.forEach(T),oe=g(P),ne=E(P,"LI",{});var br=v(ne);ie=w(br,"Stop the recording"),br.forEach(T),P.forEach(T),se=g(e),he=E(e,"P",{});var yr=v(he);ce=w(yr,"Now you can analyze the results that were recorded, this data can help you figure out when some piece of the UI get’s updated when it shouldn’t, how much updates happens, etc."),yr.forEach(T),me=g(e),de=E(e,"H1",{id:!0});var Pr=v(de);pe=w(Pr,"Profile component"),Pr.forEach(T),le=g(e),fe=E(e,"P",{});var Cr=v(fe);ue=w(Cr,"The core React team recently merge a new PR including a new component type: "),ge=E(Cr,"CODE",{});var kr=v(ge);Ee=w(kr,"Profiler"),kr.forEach(T),Cr.forEach(T),ve=g(e),we=E(e,"P",{});var $r=v(we);Te=w($r,"This component can be used to get the following timing metrics:"),$r.forEach(T),be=g(e),ye=E(e,"UL",{});var Lr=v(ye);Pe=E(Lr,"LI",{});var Ir=v(Pe);Ce=w(Ir,"User Timing API: Measure the start and stop time for each component lifecycle"),Ir.forEach(T),ke=g(Lr),$e=E(Lr,"LI",{});var Ur=v($e);Le=w(Ur,"Render time: The actual time spent rendering the "),Ie=E(Ur,"CODE",{});var Or=v(Ie);Ue=w(Or,"Profile"),Or.forEach(T),Oe=w(Ur," and it descendants"),Ur.forEach(T),Re=g(Lr),De=E(Lr,"LI",{});var Rr=v(De);_e=w(Rr,"Base render time: The time spent in the most recent `render` for each component under the "),xe=E(Rr,"CODE",{});var Dr=v(xe);je=w(Dr,"Profiler"),Dr.forEach(T),ze=w(Rr," tree."),Rr.forEach(T),Lr.forEach(T),Ae=g(e),He=E(e,"H2",{id:!0});var _r=v(He);Me=w(_r,"How to use "),Be=E(_r,"CODE",{});var xr=v(Be);qe=w(xr,"Profiler"),xr.forEach(T),Ne=w(_r," :"),_r.forEach(T),Se=g(e),Ge=E(e,"P",{});var jr=v(Ge);Ye=w(jr,"First: This component is a new experimental API so it’s currently exported as "),Fe=E(jr,"CODE",{});var zr=v(Fe);Je=w(zr,"React.unstable_Profiler"),zr.forEach(T),Qe=w(jr," and its available in the "),Ke=E(jr,"CODE",{});var Ar=v(Ke);Ve=w(Ar,"master"),Ar.forEach(T),Ze=w(jr," branch of react. "),We=E(jr,"A",{href:!0,title:!0,rel:!0});var Hr=v(We);Xe=w(Hr,"https://github.com/facebook/react/blob/master/packages/react/src/React.js#L57"),Hr.forEach(T),jr.forEach(T),et=g(e),tt=E(e,"P",{});var Mr=v(tt);rt=w(Mr,"Using this component is dead simple:"),Mr.forEach(T),at=g(e),ot=E(e,"P",{});var Br=v(ot);nt=w(Br,"This component acts just as a “container” so the "),it=E(Br,"CODE",{});var qr=v(it);st=w(qr,"Profiler"),qr.forEach(T),ht=w(Br," can be declared anywhere in your tree and can be nested."),Br.forEach(T),ct=g(e),mt=E(e,"P",{});var Nr=v(mt);dt=w(Nr,"The "),pt=E(Nr,"CODE",{});var Sr=v(pt);lt=w(Sr,"onRender"),Sr.forEach(T),ft=w(Nr," callback is called on each `render` of the root with the following arguments:"),Nr.forEach(T),ut=g(e),gt=E(e,"UL",{});var Gr=v(gt);Et=E(Gr,"LI",{});var Yr=v(Et);vt=w(Yr,"id: An identificator for the "),wt=E(Yr,"CODE",{});var Fr=v(wt);Tt=w(Fr,"Profiler"),Fr.forEach(T),Yr.forEach(T),bt=g(Gr),yt=E(Gr,"LI",{});var Jr=v(yt);Pt=w(Jr,"phase: Identify in what step the component is: "),Ct=E(Jr,"CODE",{});var Qr=v(Ct);kt=w(Qr,"mount"),Qr.forEach(T),$t=w(Jr," or "),Lt=E(Jr,"CODE",{});var Kr=v(Lt);It=w(Kr,"update"),Kr.forEach(T),Jr.forEach(T),Ut=g(Gr),Ot=E(Gr,"LI",{});var Vr=v(Ot);Rt=w(Vr,"actualTime: The time spent rendering the "),Dt=E(Vr,"CODE",{});var Zr=v(Dt);_t=w(Zr,"Profiler"),Zr.forEach(T),xt=w(Vr," and the descendant tree."),Vr.forEach(T),jt=g(Gr),zt=E(Gr,"LI",{});var Wr=v(zt);At=w(Wr,"baseTime: The time spent rendering the descendant components of the "),Ht=E(Wr,"CODE",{});var Xr=v(Ht);Mt=w(Xr,"Profiler"),Xr.forEach(T),Wr.forEach(T),Gr.forEach(T),Bt=g(e),qt=E(e,"H2",{id:!0});var ea=v(qt);Nt=w(ea,"Metrics"),ea.forEach(T),St=g(e),Gt=E(e,"P",{});var ta=v(Gt);Yt=w(ta,"The metrics that can be gathered with this component are (as mentioned above)"),ta.forEach(T),Ft=g(e),Jt=E(e,"UL",{});var ra=v(Jt);Qt=E(ra,"LI",{});var aa=v(Qt);Kt=w(aa,"User Timing API: Measure the start and stop time for the components lifecycle. This is measured in a realtime graph gathering the times for each component lifecyle in the tree. The realtime graph is recorded after each lifecyle call."),aa.forEach(T),Vt=g(ra),Zt=E(ra,"LI",{});var oa=v(Zt);Wt=w(oa,"Actual Render time: The actual time spent rendering the "),Xt=E(oa,"CODE",{});var na=v(Xt);er=w(na,"Profile"),na.forEach(T),tr=w(oa," and it descendants. This is measured but starting a timer during the "),rr=E(oa,"EM",{});var ia=v(rr);ar=w(ia,"begin_phase and finishing it at the _complete"),ia.forEach(T),or=w(oa," phase. The time is recorded each time "),nr=E(oa,"CODE",{});var sa=v(nr);ir=w(sa,"Profiler"),sa.forEach(T),sr=w(oa," is re-rendered. Can be useful to understand how the subtree make use of `shouldComponentUpdate` and to check how the momoization process behave. Less time means better memoization."),oa.forEach(T),hr=g(ra),cr=E(ra,"LI",{});var ha=v(cr);mr=w(ha,"Base render time: The time spent in the most recent `render` for each component under the "),dr=E(ha,"CODE",{});var ca=v(dr);pr=w(ca,"Profiler"),ca.forEach(T),lr=w(ha," tree. This is measured for each "),fr=E(ha,"CODE",{});var ma=v(fr);ur=w(ma,"fiber"),ma.forEach(T),gr=w(ha,"under the "),Er=E(ha,"CODE",{});var da=v(Er);vr=w(da,"Profiler"),da.forEach(T),wr=w(ha," component. The times are not updated is the components skips the render. This can tell how expensive is the `render` function in the worst scenario."),ha.forEach(T),ra.forEach(T),this.h()},h(){b(j,"id","using-chrome-timeline-to-profile-your-components"),b(de,"id","profile-component"),b(He,"id","how-to-use-profiler-"),b(We,"href","https://github.com/facebook/react/blob/master/packages/react/src/React.js#L57"),b(We,"title","https://github.com/facebook/react/blob/master/packages/react/src/React.js#L57"),b(We,"rel","nofollow"),b(qt,"id","metrics")},m(e,o){i(t,e,o),y(e,r,o),y(e,a,o),P(a,s),y(e,h,o),y(e,p,o),P(p,C),P(C,L),P(p,I),P(p,U),P(U,O),P(U,R),P(R,D),P(U,_),y(e,x,o),y(e,j,o),P(j,z),y(e,A,o),y(e,H,o),P(H,M),y(e,B,o),y(e,q,o),P(q,N),y(e,S,o),y(e,G,o),P(G,Y),P(G,F),P(F,J),P(G,Q),y(e,K,o),y(e,V,o),P(V,Z),P(Z,W),P(Z,X),P(X,ee),P(V,te),P(V,re),P(re,ae),P(V,oe),P(V,ne),P(ne,ie),y(e,se,o),y(e,he,o),P(he,ce),y(e,me,o),y(e,de,o),P(de,pe),y(e,le,o),y(e,fe,o),P(fe,ue),P(fe,ge),P(ge,Ee),y(e,ve,o),y(e,we,o),P(we,Te),y(e,be,o),y(e,ye,o),P(ye,Pe),P(Pe,Ce),P(ye,ke),P(ye,$e),P($e,Le),P($e,Ie),P(Ie,Ue),P($e,Oe),P(ye,Re),P(ye,De),P(De,_e),P(De,xe),P(xe,je),P(De,ze),y(e,Ae,o),y(e,He,o),P(He,Me),P(He,Be),P(Be,qe),P(He,Ne),y(e,Se,o),y(e,Ge,o),P(Ge,Ye),P(Ge,Fe),P(Fe,Je),P(Ge,Qe),P(Ge,Ke),P(Ke,Ve),P(Ge,Ze),P(Ge,We),P(We,Xe),y(e,et,o),y(e,tt,o),P(tt,rt),y(e,at,o),y(e,ot,o),P(ot,nt),P(ot,it),P(it,st),P(ot,ht),y(e,ct,o),y(e,mt,o),P(mt,dt),P(mt,pt),P(pt,lt),P(mt,ft),y(e,ut,o),y(e,gt,o),P(gt,Et),P(Et,vt),P(Et,wt),P(wt,Tt),P(gt,bt),P(gt,yt),P(yt,Pt),P(yt,Ct),P(Ct,kt),P(yt,$t),P(yt,Lt),P(Lt,It),P(gt,Ut),P(gt,Ot),P(Ot,Rt),P(Ot,Dt),P(Dt,_t),P(Ot,xt),P(gt,jt),P(gt,zt),P(zt,At),P(zt,Ht),P(Ht,Mt),y(e,Bt,o),y(e,qt,o),P(qt,Nt),y(e,St,o),y(e,Gt,o),P(Gt,Yt),y(e,Ft,o),y(e,Jt,o),P(Jt,Qt),P(Qt,Kt),P(Jt,Vt),P(Jt,Zt),P(Zt,Wt),P(Zt,Xt),P(Xt,er),P(Zt,tr),P(Zt,rr),P(rr,ar),P(Zt,or),P(Zt,nr),P(nr,ir),P(Zt,sr),P(Jt,hr),P(Jt,cr),P(cr,mr),P(cr,dr),P(dr,pr),P(cr,lr),P(cr,fr),P(fr,ur),P(cr,gr),P(cr,Er),P(Er,vr),P(cr,wr),Tr=!0},p(e,r){const a={};2&r&&(a.$$scope={dirty:r,ctx:e}),t.$set(a)},i(e){Tr||(c(t.$$.fragment,e),Tr=!0)},o(e){m(t.$$.fragment,e),Tr=!1},d(e){d(t,e),e&&T(r),e&&T(a),e&&T(h),e&&T(p),e&&T(x),e&&T(j),e&&T(A),e&&T(H),e&&T(B),e&&T(q),e&&T(S),e&&T(G),e&&T(K),e&&T(V),e&&T(se),e&&T(he),e&&T(me),e&&T(de),e&&T(le),e&&T(fe),e&&T(ve),e&&T(we),e&&T(be),e&&T(ye),e&&T(Ae),e&&T(He),e&&T(Se),e&&T(Ge),e&&T(et),e&&T(tt),e&&T(at),e&&T(ot),e&&T(ct),e&&T(mt),e&&T(ut),e&&T(gt),e&&T(Bt),e&&T(qt),e&&T(St),e&&T(Gt),e&&T(Ft),e&&T(Jt)}}}function I(e){let t,r;const p=[e[0],U];let l={$$slots:{default:[L]},$$scope:{ctx:e}};for(let o=0;o<p.length;o+=1)l=a(l,p[o]);return t=new C({props:l}),{c(){o(t.$$.fragment)},l(e){n(t.$$.fragment,e)},m(e,a){i(t,e,a),r=!0},p(e,[r]){const a=1&r?s(p,[1&r&&h(e[0]),0&r&&h(U)]):{};2&r&&(a.$$scope={dirty:r,ctx:e}),t.$set(a)},i(e){r||(c(t.$$.fragment,e),r=!0)},o(e){m(t.$$.fragment,e),r=!1},d(e){d(t,e)}}}const U={date:"2020-07-21T15:06:24.000Z",banner:"https://res.cloudinary.com/matiasfha/image/upload/v1595344382/kolleen-gladden-ij5_qCBpIVY-unsplash_ncnaro.jpg",keywords:["react","performance"],title:"Measuring your React app performance",description:"There are different ways or approaches that helps you to measure your app performance when working with React. Here we will summarize a two of them:",bannerCredit:'<span>Photo by <a href="https://unsplash.com/@rockthechaos?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Kolleen  Gladden</a> on <a href="https://unsplash.com/s/photos/performance?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></span>',tag:"Post"};function O(e,t,r){return e.$$set=e=>{r(0,t=a(a({},t),p(e)))},[t=p(t)]}class R extends e{constructor(e){super(),t(this,e,O,I,r,{})}}export{R as default,U as metadata};
